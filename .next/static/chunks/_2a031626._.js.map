{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/lib/zodSchemas.ts"],"sourcesContent":["// import {z} from 'zod'\r\n\r\n// export const courseSchema = z.object({\r\n//     title: z.string()\r\n//     .min(3, { message: \"Title must be at least 3 character long\" })\r\n//     .max(100, { message: \"Title must be at most 100 character long\" }),\r\n//     description: z.string()\r\n//     .min(3, { message: \"Description must be at least 3 character long\" }),\r\n//     fileKey: z.string()\r\n//     .min(1, { message: \"File is required\" }),\r\n//     price: z.coerce.number()\r\n//     .min(1, { message: \"price must be in positive number\" }),\r\n//     duration: z.coerce.number()\r\n//     .min(1, { message: \"Duration must be at least 1 hour\" })\r\n//     .max(500, { message: \"Duration must be at least 500 hour\" }),\r\n//     level: z.enum(courseLevels, { message: \"Level is required\" }),\r\n//     category: z.enum(courseCategories, { message: \"category is requird\" }),\r\n//     smallDescription: z.string()\r\n//     .min(3, { message: \"small description must be at least 3 character\" })\r\n//     .max(200, { message: \"small description must be at most 100 character long\" }),\r\n//     slug: z.string().min(3, { message: \"slung must be least 3 character long\" }),\r\n//     status: z.enum(courseStatus, { message: \"status is required\" }),\r\n// })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { z } from 'zod';\r\n\r\n// export const courseLevels = [\r\n//     \"Beginner\",\r\n//     \"intermediate\",\r\n//     \"Advanced\"\r\n// ] as const;\r\n// export const courseStatus = [\r\n//     \"Draft\",\r\n//     \"Published\",\r\n//     \"Archived\"\r\n// ] as const;\r\n\r\nexport const courseLevels = [\"BEGINNER\", \"INTERMEDIATE\", \"ADVANCED\"] as const;\r\nexport const courseStatus = [\"DRAFT\", \"PUBLISHED\", \"ARCHIVED\"] as const;\r\n\r\n\r\n\r\n\r\nexport const courseCategories = [\r\n  \"Computer Science Fundamentals\",\r\n  \"Data Structures & Algorithms\",\r\n  \"Operating Systems\",\r\n  \"Computer Networks\",\r\n  \"Database Management Systems\",\r\n  \"Software Engineering\",\r\n  \"Web Development\",\r\n  \"Mobile App Development\",\r\n  \"Cloud Computing\",\r\n  \"Cybersecurity\",\r\n  \"Artificial Intelligence\",\r\n  \"Machine Learning\",\r\n  \"Deep Learning\",\r\n  \"Data Science & Analytics\",\r\n  \"Big Data Technologies\",\r\n  \"Programming Languages\",\r\n  \"DevOps & CI/CD\",\r\n  \"Blockchain Development\",\r\n  \"Internet of Things (IoT)\",\r\n  \"Human-Computer Interaction\",\r\n  \"Theory of Computation\",\r\n  \"Compiler Design\",\r\n  \"Parallel & Distributed Systems\",\r\n  \"Virtualization & Containerization\",\r\n  \"Computer Graphics & Vision\",\r\n  \"Quantum Computing\",\r\n  \"Embedded Systems\",\r\n  \"Software Testing & Quality Assurance\"\r\n] as const;\r\n\r\n\r\nexport const courseSchema = z.object({\r\n    title: z.string()\r\n    .min(3, { message: \"Title must be at least 3 character long\" })\r\n    .max(100, { message: \"Title must be at most 100 character long\" }),\r\n    description: z.string()\r\n    .min(3, { message: \"Description must be at least 3 character long\" }),\r\n    fileKey: z.string()\r\n    .min(1, { message: \"File is required\" }),\r\n    price: z.coerce.number()\r\n    .min(1, { message: \"price must be in positive number\" }),\r\n    duration: z.coerce.number()\r\n    .min(1, { message: \"Duration must be at least 1 hour\" })\r\n    .max(500, { message: \"Duration must be at least 500 hour\" }),\r\n    level: z.enum(courseLevels, { message: \"Level is required\" }),\r\n    category: z.enum(courseCategories, { message: \"category is requird\" }),\r\n    smallDescription: z.string()\r\n    .min(3, { message: \"small description must be at least 3 character\" })\r\n    .max(200, { message: \"small description must be at most 100 character long\" }),\r\n    slug: z.string().min(3, { message: \"slung must be least 3 character long\" }),\r\n    status: z.enum(courseStatus, { message: \"status is required\" }),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport type CourseSchemaType = z.infer<typeof courseSchema>;"],"names":[],"mappings":"AAAA,wBAAwB;AAExB,yCAAyC;AACzC,wBAAwB;AACxB,sEAAsE;AACtE,0EAA0E;AAC1E,8BAA8B;AAC9B,6EAA6E;AAC7E,0BAA0B;AAC1B,gDAAgD;AAChD,+BAA+B;AAC/B,gEAAgE;AAChE,kCAAkC;AAClC,+DAA+D;AAC/D,oEAAoE;AACpE,qEAAqE;AACrE,8EAA8E;AAC9E,mCAAmC;AACnC,6EAA6E;AAC7E,sFAAsF;AACtF,oFAAoF;AACpF,uEAAuE;AACvE,KAAK;;;;;;;AASL;;AAaO,MAAM,eAAe;IAAC;IAAY;IAAgB;CAAW;AAC7D,MAAM,eAAe;IAAC;IAAS;IAAa;CAAW;AAKvD,MAAM,mBAAmB;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,MAAM,eAAe,gLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,OAAO,gLAAA,CAAA,IAAC,CAAC,MAAM,GACd,GAAG,CAAC,GAAG;QAAE,SAAS;IAA0C,GAC5D,GAAG,CAAC,KAAK;QAAE,SAAS;IAA2C;IAChE,aAAa,gLAAA,CAAA,IAAC,CAAC,MAAM,GACpB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAgD;IACnE,SAAS,gLAAA,CAAA,IAAC,CAAC,MAAM,GAChB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmB;IACtC,OAAO,gLAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GACrB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmC;IACtD,UAAU,gLAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GACxB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmC,GACrD,GAAG,CAAC,KAAK;QAAE,SAAS;IAAqC;IAC1D,OAAO,gLAAA,CAAA,IAAC,CAAC,IAAI,CAAC,cAAc;QAAE,SAAS;IAAoB;IAC3D,UAAU,gLAAA,CAAA,IAAC,CAAC,IAAI,CAAC,kBAAkB;QAAE,SAAS;IAAsB;IACpE,kBAAkB,gLAAA,CAAA,IAAC,CAAC,MAAM,GACzB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAiD,GACnE,GAAG,CAAC,KAAK;QAAE,SAAS;IAAuD;IAC5E,MAAM,gLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAuC;IAC1E,QAAQ,gLAAA,CAAA,IAAC,CAAC,IAAI,CAAC,cAAc;QAAE,SAAS;IAAqB;AACjE","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/admin/courses/create/page.tsx"],"sourcesContent":["// import { buttonVariants } from \"@/components/ui/button\";\r\n// import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n// import { courseSchema, CourseSchemaType } from \"@/lib/zodSchemas\";\r\n// import { ArrowLeft } from \"lucide-react\";\r\n// import Link from \"next/link\";\r\n// import { Form, useForm } from \"react-hook-form\";\r\n// import { zodResolver } from \"@hookform/resolvers/zod\";\r\n// // import { title } from \"process\";\r\n// // import { stat } from \"fs\";\r\n// // import { sl } from \"zod//v4/locales\";\r\n// // import { log } from \"console\";\r\n\r\n\r\n\r\n// export default function CourseCreationPage() {\r\n//     // 1. Define your form.\r\n//     const form = useForm<CourseSchemaType>({\r\n//         resolver: zodResolver(courseSchema),\r\n//         defaultValues: {\r\n//             title: \"\",\r\n//             description: \"\",\r\n//             fileKey: \"\",\r\n//             price: 0,\r\n//             duration: 0,\r\n//             level: \"BEGINNER\",\r\n//             category: \"Machine Learning\",\r\n//             status: \"DRAFT\",\r\n//             slug: \"\",\r\n//             smallDescription: \"\",\r\n\r\n//         },\r\n//     });\r\n\r\n\r\n//     function onSubmit(values: CourseSchemaType) {\r\n//         console.log(values)\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <div className=\"flex items-center gap-4\">\r\n//                 <Link\r\n//                     href=\"/admin/courses\"\r\n//                     className={buttonVariants({\r\n//                         variant: \"outline\",\r\n//                         size: \"icon\",\r\n//                     })}\r\n//                 >\r\n//                     <ArrowLeft className=\"size-4\" />\r\n//                 </Link>\r\n\r\n//                 <h1 className=\"text-2xl font-bold\">Create Course</h1>\r\n//             </div>\r\n\r\n\r\n//             <Card>\r\n//                 <CardHeader>\r\n//                     <CardTitle>Baisc Information</CardTitle>\r\n//                     <CardDescription>\r\n//                         Provide the basic information for the course you want to create.\r\n//                     </CardDescription>\r\n//                 </CardHeader>\r\n//                 <CardContent>\r\n//                     <Form {...form}>\r\n//                         <form className=\"space-y-6\"\r\n//                         onSubmit={form.handleSubmit(onSubmit)}\r\n//                         ></form>\r\n//                     </Form>\r\n\r\n//                 </CardContent>\r\n\r\n//             </Card>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\n\r\n\r\n\r\n\r\nimport { Button, buttonVariants } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { courseSchema, CourseSchemaType } from \"@/lib/zodSchemas\";\r\nimport { ArrowLeft, SparkleIcon } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\n\r\nexport default function CourseCreationPage() {\r\n    const form = useForm<CourseSchemaType>({\r\n        resolver: zodResolver(courseSchema),\r\n        defaultValues: {\r\n            title: \"\",\r\n            description: \"\",\r\n            fileKey: \"\",\r\n            price: 0,\r\n            duration: 0,\r\n            level: \"BEGINNER\",\r\n            category: \"Computer Science Fundamentals\",\r\n            smallDescription: \"\",\r\n            slug: \"\",\r\n            status: \"DRAFT\"\r\n        },\r\n    });\r\n\r\n    function onSubmit(values: CourseSchemaType) {\r\n        console.log(values);\r\n    }\r\n\r\n\r\n\r\n\r\n    function slugify(titleValue: string) {\r\n        return titleValue\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/[\\s\\W-]+/g, \"-\")\r\n            .replace(/^-+|-+$/g, \"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex items-center gap-4\">\r\n                <Link\r\n                    href=\"/admin/courses\"\r\n                    className={buttonVariants({\r\n                        variant: \"outline\",\r\n                        size: \"icon\",\r\n                    })}\r\n                >\r\n                    <ArrowLeft className=\"size-4\" />\r\n                </Link>\r\n                <h1 className=\"text-2xl font-bold\">Create Course</h1>\r\n            </div>\r\n\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle>Basic Information</CardTitle>\r\n                    <CardDescription>\r\n                        Provide the basic information for the course you want to create.\r\n                    </CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Form {...form}>\r\n                        <form\r\n                            className=\"space-y-6\"\r\n                            onSubmit={form.handleSubmit(onSubmit)}\r\n                        >\r\n                            <FormField\r\n                                control={form.control}\r\n                                name=\"title\"\r\n                                render={({ field }) => (\r\n                                    <FormItem>\r\n                                        <FormLabel>Title</FormLabel>\r\n                                        <FormControl>\r\n                                            <Input placeholder=\"Title\" {...field} />\r\n                                        </FormControl>\r\n                                    </FormItem>\r\n                                )}\r\n                            />\r\n                            <div className=\"flex gap-4 items-end\">\r\n                                <FormField\r\n                                    control={form.control}\r\n                                    name=\"slug\"\r\n                                    render={({ field }) => (\r\n                                        <FormItem className=\"w-full\">\r\n                                            <FormLabel>slug</FormLabel>\r\n                                            <FormControl>\r\n                                                <Input placeholder=\"slug\" {...field} />\r\n                                            </FormControl>\r\n                                            <FormMessage />\r\n                                        </FormItem>\r\n                                    )}\r\n                                />\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"w-fit\"\r\n                                    onClick={() => {\r\n                                        const titleValue = form.getValues(\"title\");\r\n                                        const slug = slugify(titleValue);\r\n                                        form.setValue(\"slug\", slug, { shouldValidate: true });\r\n                                    }}\r\n                                >\r\n                                    Generate Slug <SparkleIcon className=\"ml-1\" size={16} />\r\n                                </Button>\r\n\r\n                            </div>\r\n                        </form>\r\n                    </Form>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// ai code for testing\r\n"],"names":[],"mappings":"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","debugId":null}}]
}