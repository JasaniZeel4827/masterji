{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/file-uploader/RenderState.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\nimport { CloudUploadIcon, ImageIcon, Loader2, XIcon } from \"lucide-react\";\r\nimport { Button } from \"../ui/button\";\r\n// import { Image } from \"next/image\";\r\nimport Image from \"next/image\";\r\n\r\nexport function RenderEmptyState({ isDragActive }: { isDragActive: boolean }) {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"flex items-center mx-auto justify-center size-12 rounded-full bg-muted mb-4\">\r\n        <CloudUploadIcon\r\n          className={cn(\r\n            \"size-6 text-muted-foreground\",\r\n            isDragActive && \"text-primary\"\r\n          )}\r\n        />\r\n      </div>\r\n      <p>Drop your file here <span>Click to upload</span></p>\r\n      <Button type=\"button\" className=\"mt-4\">\r\n        Select File\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport function RenderErrorState() {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"flex items-center mx-auto justify-center size-12 rounded-full bg-destructive/30 mb-4\">\r\n        <ImageIcon className={cn(\"size-6 text-destructive\")} />\r\n      </div>\r\n\r\n      <p className=\"text-base font-semibold\">Upload Failed</p>\r\n      <p className=\"text-xs mt-1 text-muted-foreground\">Something went wrong</p>\r\n      <Button className=\"mt-4\" type=\"button\">\r\n        Retry\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport function RenderUploadedState({\r\n  previewUrl,\r\n  isDeleting,\r\n  handleRemoveFile,\r\n}: {\r\n  previewUrl: string\r\n  isDeleting: boolean,\r\n  handleRemoveFile: () => void;\r\n}) {\r\n  return (\r\n    <div>\r\n      <Image\r\n        src={previewUrl}\r\n        alt=\"Uploaded File\"\r\n        fill\r\n        className=\"object-contain p-2\"\r\n      />\r\n      <Button\r\n        variant=\"destructive\"\r\n        size=\"icon\"\r\n        className={cn(\"absolute top-4 right-4\")}\r\n        onClick={handleRemoveFile}\r\n        disabled={isDeleting}\r\n      >\r\n        {isDeleting ? (\r\n          <Loader2 className=\"size-4 animate-spin\" />\r\n        ) : (\r\n          <XIcon className=\"size-4\" />\r\n        )}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport function RenderUploadingState({\r\n  progress,\r\n  file,\r\n}: {\r\n  progress: number;\r\n  file: File;\r\n}) {\r\n  return (\r\n    <div className=\"text-center flex justify-center items-center flex-col\">\r\n      <p>{progress}</p>\r\n      <p className=\"mt-2 text-sm font-medium text-foreground\">Uploading...</p>\r\n      <p className=\"mt-1 text-xs text-muted-foreground truncate max-w-xs\">\r\n        {file.name}\r\n      </p>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA,sCAAsC;AACtC;;;;;;AAEO,SAAS,iBAAiB,EAAE,YAAY,EAA6B;IAC1E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,wNAAA,CAAA,kBAAe;oBACd,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gCACA,gBAAgB;;;;;;;;;;;0BAItB,8OAAC;;oBAAE;kCAAoB,8OAAC;kCAAK;;;;;;;;;;;;0BAC7B,8OAAC,2HAAA,CAAA,SAAM;gBAAC,MAAK;gBAAS,WAAU;0BAAO;;;;;;;;;;;;AAK7C;AAIO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,wMAAA,CAAA,YAAS;oBAAC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE;;;;;;;;;;;0BAG3B,8OAAC;gBAAE,WAAU;0BAA0B;;;;;;0BACvC,8OAAC;gBAAE,WAAU;0BAAqC;;;;;;0BAClD,8OAAC,2HAAA,CAAA,SAAM;gBAAC,WAAU;gBAAO,MAAK;0BAAS;;;;;;;;;;;;AAK7C;AAKO,SAAS,oBAAoB,EAClC,UAAU,EACV,UAAU,EACV,gBAAgB,EAKjB;IACC,qBACE,8OAAC;;0BACC,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK;gBACL,KAAI;gBACJ,IAAI;gBACJ,WAAU;;;;;;0BAEZ,8OAAC,2HAAA,CAAA,SAAM;gBACL,SAAQ;gBACR,MAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE;gBACd,SAAS;gBACT,UAAU;0BAET,2BACC,8OAAC,iNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;yCAEnB,8OAAC,gMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAK3B;AAKO,SAAS,qBAAqB,EACnC,QAAQ,EACR,IAAI,EAIL;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAE,WAAU;0BAA2C;;;;;;0BACxD,8OAAC;gBAAE,WAAU;0BACV,KAAK,IAAI;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/hooks/use-construct-url.ts"],"sourcesContent":["// import { env } from \"@/lib/env\";\r\n\r\n\r\n// export function useConstructUrl(key: string): string {\r\n//     return `https://${env.NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES}t3.storage.dev/${key}`;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ai no code \r\n\r\n\r\n// export function useConstructUrl(key: string): string {\r\n//   return `https://${env.NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES}.t3.storageapi.dev/${key}`;\r\n// }\r\n\r\n\r\n\r\n\r\n// export function useConstructUrl(key: string): string {\r\n//   return `https://${process.env.NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES}.t3.storageapi.dev/${key}`;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// \r\n\r\n\r\n\r\n\r\n\r\n// export function useConstructUrl(key: string): string {\r\n//   return `https://${process.env.NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES}.t3.storageapi.dev/${key}`;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function useConstructUrl(key: string): string {\r\n  if (!key) return \"\";\r\n  return `https://${process.env.NEXT_PUBLIC_S3_BUCKET_NAME_IMAGES}.t3.storageapi.dev/${key}`;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// https://masteji-mordern-lms.t3.storage.dev/19386460-010b-4460-a30e-98c4fccec63d-Screenshot 2025-07-06 110202.png\r\n\r\n// https://masteji-mordern-lms.t3.storage.dev/0bf79317-3644-47bb-9ff6-e05d576e4931-133268513-5bfe2f93-4402-42c9-a403-81c9e86934b6.jpeg\r\n\r\n\r\n\r\n\r\n\r\n// https://masteji-mordern-lms.t3.storage.dev/\r\n\r\n\r\n\r\n\r\n\r\n// https://masteji-mordern-lms.t3.storage.dev/0bf79317-3644-47bb-9ff6-e05d576e4931-133268513-5bfe2f93-4402-42c9-a403-81c9e86934b6.jpeg\r\n\r\n\r\n\r\n\r\n// https://masteji-mordern-lms.t3.storage.dev/0bf79317-3644-47bb-9ff6-e05d576e4931-133268513-5bfe2f93-4402-42c9-a403-81c9e86934b6.jpeg\r\n\r\n\r\n\r\n// Error: Invalid src prop (https://masteji-mordern-lmst3.storage.dev/0bf79317-3644-47bb-9ff6-e05d576e4931-133268513-5bfe2f93-4402-42c9-a403-81c9e86934b6.jpeg) on `next/image`, hostname \"masteji-mordern-lmst3.storage.dev\" is not configured under images in your `next.config.js`\r\n// //See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\r\n//     at defaultLoader (http://localhost:3000/_next/static/chunks/54445_next_061ac422._.js:3756:49)\r\n//     at http://localhost:3000/_next/static/chunks/54445_next_061ac422._.js:1169:36\r\n//     at Array.map (<anonymous>)\r\n//     at generateImgAttrs (http://localhost:3000/_next/static/chunks/54445_next_061ac422._.js:1169:24)\r\n//     at getImgProps (http://localhost:3000/_next/static/chunks/54445_next_061ac422._.js:1556:27)\r\n//     at http://localhost:3000/_next/static/chunks/54445_next_061ac422._.js:4060:82\r\n//     at Object.react_stack_bottom_frame (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:13014:24)\r\n//     at renderWithHooks (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:4064:24)\r\n//     at updateForwardRef (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:5315:21)\r\n//     at beginWork (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:6007:46)\r\n//     at runWithFiberInDEV (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:890:74)\r\n//     at performUnitOfWork (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:8236:97)\r\n//     at workLoopSync (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:8128:40)\r\n//     at renderRootSync (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:8111:13)\r\n//     at performWorkOnRoot (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:7870:56)\r\n//     at performWorkOnRootViaSchedulerTask (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_react-dom_f3eadbf3._.js:8820:9)\r\n//     at MessagePort.performWorkUntilDeadline (http://localhost:3000/_next/static/chunks/54445_next_dist_compiled_bdc90ddb._.js:2588:64)\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"AAAA,mCAAmC;AAGnC,yDAAyD;AACzD,sFAAsF;AACtF,IAAI;AAWJ,cAAc;AAGd,yDAAyD;AACzD,wFAAwF;AACxF,IAAI;AAKJ,yDAAyD;AACzD,gGAAgG;AAChG,IAAI;AAMJ,GAAG;AAMH,yDAAyD;AACzD,gGAAgG;AAChG,IAAI;;;;AAQG,SAAS,gBAAgB,GAAW;IACzC,IAAI,CAAC,KAAK,OAAO;IACjB,OAAO,CAAC,QAAQ,wDAAgD,mBAAmB,EAAE,KAAK;AAC5F,EAkFA,mHAAmH;CAEnH,sIAAsI;CAMtI,8CAA8C;CAM9C,sIAAsI;CAKtI,sIAAsI;CAItI,qRAAqR;CACrR,iFAAiF;CACjF,oGAAoG;CACpG,oFAAoF;CACpF,iCAAiC;CACjC,uGAAuG;CACvG,kGAAkG;CAClG,oFAAoF;CACpF,+IAA+I;CAC/I,8HAA8H;CAC9H,+HAA+H;CAC/H,wHAAwH;CACxH,+HAA+H;CAC/H,gIAAgI;CAChI,2HAA2H;CAC3H,6HAA6H;CAC7H,gIAAgI;CAChI,+IAA+I;CAC/I,yIAAyI","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/file-uploader/Uploader.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { FileRejection, useDropzone } from \"react-dropzone\";\r\nimport { Card, CardContent } from \"../ui/card\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { RenderEmptyState, RenderErrorState, RenderUploadedState, RenderUploadingState } from \"./RenderState\";\r\nimport { toast } from \"sonner\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useConstructUrl } from \"@/hooks/use-construct-url\";\r\n\r\n\r\n\r\ninterface UploaderState {\r\n    id: string | null;\r\n    file: File | null;\r\n    uploading: boolean;\r\n    progress: number;\r\n    key?: string;\r\n    isDeleting: boolean;\r\n    error: boolean;\r\n    objectUrl: string;\r\n    fileType: \"image\" | \"video\";\r\n}\r\n\r\ninterface iAppProps {\r\n    value: string;\r\n    onChange?: (value: string) => void;\r\n}\r\n\r\n\r\n\r\n\r\nexport function Uploader({onChange, value}: iAppProps) {\r\n    const fileUrl = useConstructUrl(value || \"\")\r\n    const [fileState, setFileState] = useState<UploaderState>({\r\n        error: false,\r\n        file: null,\r\n        id: null,\r\n        uploading: false,\r\n        progress: 0,\r\n        isDeleting: false,\r\n        fileType: \"image\",\r\n        key: value,\r\n        objectUrl: fileUrl,\r\n    });\r\n\r\n    async function uploadFile(file: File) {\r\n        setFileState((prev) => ({\r\n            ...prev,\r\n            uploading: true,\r\n            progress: 0,\r\n        }));\r\n\r\n        try {\r\n            const presignedResponse = await fetch(\"/api/s3/upload\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    fileName: file.name,\r\n                    contentType: file.type,\r\n                    size: file.size,\r\n                    isImage: true,\r\n                }),\r\n            });\r\n            if (!presignedResponse.ok) {\r\n                toast.error(\"Failed to get presigned URL\");\r\n                setFileState((prev) => ({\r\n                    ...prev,\r\n                    uploading: false,\r\n                    progress: 0,\r\n                    error: true,\r\n                }));\r\n\r\n\r\n                return;\r\n            }\r\n\r\n            const { presignedUrl, key } = await presignedResponse.json();\r\n\r\n\r\n\r\n            await new Promise<void>((resolve, reject) => {\r\n                const xhr = new XMLHttpRequest();\r\n\r\n                xhr.upload.onprogress = (event) => {\r\n                    if (event.lengthComputable) {\r\n                        const percentageCompleted = (event.loaded / event.total) * 100\r\n                        setFileState((prev) => ({\r\n                            ...prev,\r\n                            progress: Math.round(percentageCompleted)\r\n                        }));\r\n                    }\r\n                }\r\n                xhr.onload = () => {\r\n                    if (xhr.status === 200 || xhr.status === 204) {\r\n                        setFileState((prev) => ({\r\n                            ...prev,\r\n                            progress: 100,\r\n                            uploading: false,\r\n                            key: key,\r\n                        }));\r\n\r\n\r\n                        onChange?.(key)\r\n                        toast.success(\"File uploaded successfully\");\r\n\r\n\r\n                        resolve();\r\n                    } else {\r\n                        reject(new Error(\"Upload failed\"));\r\n                    };\r\n\r\n                };\r\n                xhr.onerror = () => {\r\n                    reject(new Error(\"Network error\"));\r\n                };\r\n\r\n                xhr.open(\"PUT\", presignedUrl);\r\n                xhr.setRequestHeader(\"Content-Type\", file.type);\r\n                xhr.send(file);\r\n            });\r\n        } catch {\r\n            toast.error(\"Something went wrong during upload\");\r\n\r\n            setFileState((prev) => ({\r\n                ...prev,\r\n                progress: 0,\r\n                error: true,\r\n                uploading: false,\r\n            }));\r\n        }\r\n    }\r\n\r\n    const onDrop = useCallback((acceptedFiles: File[]) => {\r\n        if (acceptedFiles.length > 0) {\r\n            const file = acceptedFiles[0];\r\n\r\n            if (fileState.objectUrl && !fileState.objectUrl.startsWith(\"http\")) {\r\n                URL.revokeObjectURL(fileState.objectUrl)\r\n            }\r\n\r\n            setFileState({\r\n                file: file,\r\n                uploading: false,\r\n                progress: 0,\r\n                objectUrl: URL.createObjectURL(file),\r\n                error: false,\r\n                id: uuidv4(),\r\n                isDeleting: false,\r\n                fileType: \"image\"\r\n            });\r\n\r\n            uploadFile(file);\r\n        }\r\n    }, [fileState.objectUrl]);\r\n\r\n\r\n\r\n    async function handleRemoveFile() {\r\n        if (fileState.isDeleting || !fileState.objectUrl) return;\r\n\r\n        try {\r\n            setFileState((prev) => ({\r\n                ...prev,\r\n                isDeleting: true,\r\n            }));\r\n\r\n\r\n            const response = await fetch(\"/api/s3/delete\", {\r\n                method: \"DELETE\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    key: fileState.key,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                toast.error(\"failed to remove file from storage\");\r\n\r\n                setFileState((prev) => ({\r\n                    ...prev,\r\n                    isDeleting: true,\r\n                    error: true,\r\n\r\n                }));\r\n                return;\r\n            }\r\n\r\n\r\n            if (fileState.objectUrl && !fileState.objectUrl.startsWith(\"http\")) {\r\n                URL.revokeObjectURL(fileState.objectUrl)\r\n            }\r\n\r\n            onChange?.(\"\");\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            setFileState(() => ({\r\n                file: null,\r\n                uploading: false,\r\n                progress: 0,\r\n                objectUrl: \"\",\r\n                error: false,\r\n                id: null,\r\n                isDeleting: false,\r\n                fileType: \"image\"\r\n            }));\r\n\r\n            toast.success(\"File removed successfully\");\r\n        } catch {\r\n            toast.error(\"Something went wrong\");\r\n            setFileState((prev) => ({\r\n                ...prev,\r\n                isDeleting: false,\r\n                error: true,\r\n            }));\r\n        }\r\n    }\r\n\r\n    function rejectedFiles(fileRejection: FileRejection[]) {\r\n        if (fileRejection.length) {\r\n            const tooManyFiles = fileRejection.find((rejection) => rejection.errors[0].code === \"too-many-files\");\r\n            const fileSizeTooBig = fileRejection.find(\r\n                (rejection) => rejection.errors[0].code === \"file-too-large\"\r\n            );\r\n\r\n            if (fileSizeTooBig) {\r\n                toast.error(\"file size limit exceeds\");\r\n            }\r\n\r\n            if (tooManyFiles) {\r\n                toast.error(\"Too many files selected, max is 1\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function renderContent() {\r\n        if (fileState.uploading) {\r\n            return (\r\n                <RenderUploadingState\r\n                    file={fileState.file as File}\r\n                    progress={fileState.progress}\r\n                />\r\n            )\r\n        }\r\n\r\n        if (fileState.error) {\r\n            return <RenderErrorState />;\r\n        }\r\n\r\n        if (fileState.objectUrl) {\r\n            return (\r\n                <RenderUploadedState \r\n                    previewUrl={fileState.objectUrl}\r\n                    handleRemoveFile={handleRemoveFile}\r\n                    isDeleting={fileState.isDeleting} \r\n                />\r\n            )\r\n        }\r\n\r\n        return <RenderEmptyState isDragActive={isDragActive} />\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (fileState.objectUrl && !fileState.objectUrl.startsWith(\"http\")) {\r\n                URL.revokeObjectURL(fileState.objectUrl)\r\n            }\r\n        };\r\n    }, [fileState.objectUrl]);\r\n\r\n\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: { \"image/*\": [] },\r\n        maxFiles: 1,\r\n        multiple: false,\r\n        maxSize: 5 * 1024 * 1024, // 5MB\r\n        onDropRejected: rejectedFiles,\r\n        disabled: fileState.uploading || !!fileState.objectUrl,\r\n    });\r\n\r\n    return (\r\n        <Card {...getRootProps()} className={cn(\r\n            \"relative border-2 border-dashed transition-colors duration-200 ease-in-out w-full h-64\",\r\n            isDragActive ? 'border-primary bg-primary/10 border-solid' : 'border-border hover:border-primary'\r\n        )}>\r\n            <CardContent className=\"flex items-center justify-center h-full w-full p-4\">\r\n                <input {...getInputProps()} />\r\n                {/* <RenderEmptyState isDragActive={isDragActive} /> */}\r\n                {renderContent()}\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/toggle.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent shadow-xs hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-9 px-2 min-w-9\",\n        sm: \"h-8 px-1.5 min-w-8\",\n        lg: \"h-10 px-2.5 min-w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Toggle({\n  className,\n  variant,\n  size,\n  ...props\n}: React.ComponentProps<typeof TogglePrimitive.Root> &\n  VariantProps<typeof toggleVariants>) {\n  return (\n    <TogglePrimitive.Root\n      data-slot=\"toggle\"\n      className={cn(toggleVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Toggle, toggleVariants }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ijBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,GAAG,OAEgC;IACnC,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/rich-text-editor/Menubar.tsx"],"sourcesContent":["// // // \"use client\";\r\n// // \"use client\";\r\n\r\n// // import { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider } from \"@/components/ui/tooltip\";\r\n\r\n\r\n// // import { Editor } from \"@tiptap/react\";\r\n// // // import { TooltipProvider, TooltipTrigger } from \"../ui/tooltip\";\r\n// // import { Toggle } from \"../ui/toggle\";\r\n// // import { Bold } from \"lucide-react\";\r\n\r\n// // interface IAppProps {\r\n// //   editor: Editor | null;\r\n// // }\r\n\r\n// // export function Menubar({ editor }: IAppProps) {\r\n// //   if (!editor) {\r\n// //     return null;\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div>\r\n// //         <TooltipProvider>\r\n// //             <TooltipTrigger asChild>\r\n// //                 <Toggle>\r\n// //                    <Bold /> \r\n// //                 </Toggle>\r\n// //             </TooltipTrigger>\r\n// //         </TooltipProvider>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n\r\n\r\n\r\n\r\n// // for testing\r\n\r\n// // \"use client\";\r\n\r\n// // import { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider } from \"@/components/ui/tooltip\";\r\n// // import { Editor } from \"@tiptap/react\";\r\n// // import { Toggle } from \"../ui/toggle\";\r\n// // import { Bold, Heading1, Heading1Icon, Heading2Icon, Heading3Icon, Italic, ListIcon, ListOrdered, Strikethrough } from \"lucide-react\";\r\n// // import { cn } from \"@/lib/utils\";\r\n\r\n// // interface IAppProps {\r\n// //     editor: Editor | null;\r\n// // }\r\n\r\n// // export function Menubar({ editor }: IAppProps) {\r\n// //     if (!editor) return null;\r\n\r\n// //     return (\r\n// //         <TooltipProvider>\r\n// //                 {/* <div className=\"border border-input rounded-t-lg p-2 bg-card flex flex-wrap gap-1 items-center\"> */}\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle size=\"sm\" pressed={editor.isActive(\"bold\")}\r\n// //                             onPressedChange={() => editor.chain().focus().toggleBold().run()\r\n\r\n// //                             }\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"bold\") && 'bg-muted text-muted-foreground'\r\n// //                             )}\r\n// //                         >\r\n// //                             <Bold />\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         Bold\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                 {/* italic tooltip */}\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle size=\"sm\" pressed={editor.isActive(\"italic\")}\r\n// //                             onPressedChange={() => editor.chain().focus().toggleItalic().run()\r\n\r\n// //                             }\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"italic\") && 'bg-muted text-muted-foreground'\r\n// //                             )}\r\n// //                         >\r\n// //                             <Italic />\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         italic\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                 {/* strike */}\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle size=\"sm\" pressed={editor.isActive(\"strike\")}\r\n// //                             onPressedChange={() => editor.chain().focus().toggleStrike().run()\r\n\r\n// //                             }\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"strike\") && 'bg-muted text-muted-foreground'\r\n// //                             )}\r\n// //                         >\r\n// //                             <Strikethrough />\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         strike\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                 {/* for heading */}\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle size=\"sm\" pressed={editor.isActive(\"heading\", { level: 1 })}\r\n// //                             onPressedChange={() => editor.chain().focus().toggleHeading({ level: 1 }).run()\r\n\r\n// //                             }\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"heading\", { level: 1 }) && \"bg-muted text-muted-foreground\"\r\n// //                             )}\r\n// //                         >\r\n// //                             <Heading1Icon />\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         Heading 1\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle size=\"sm\" pressed={editor.isActive(\"heading\", { level: 2 })}\r\n// //                             onPressedChange={() => editor.chain().focus().toggleHeading({ level: 2 }).run()\r\n\r\n// //                             }\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"heading\", { level: 2 }) && \"bg-muted text-muted-foreground\"\r\n// //                             )}\r\n// //                         >\r\n// //                             <Heading2Icon />\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         Heading 2\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle size=\"sm\" pressed={editor.isActive(\"heading\", { level: 3 })}\r\n// //                             onPressedChange={() => editor.chain().focus().toggleHeading({ level: 3 }).run()\r\n\r\n// //                             }\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"heading\", { level: 3 }) && \"bg-muted text-muted-foreground\"\r\n// //                             )}\r\n// //                         >\r\n// //                             <Heading3Icon />\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         Heading 3\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                 <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle\r\n// //                             size=\"sm\"\r\n// //                             pressed={editor.isActive(\"bulletList\")}\r\n// //                             onPressedChange={() => {\r\n// //                                 editor.chain().focus().toggleBulletList().run();\r\n// //                             }}\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"bulletList\") && \"bg-muted text-muted-foreground\"\r\n// //                             )}\r\n// //                         >\r\n// //                             <ListIcon />\r\n// //                             <TooltipTrigger>\r\n// //                                 <TooltipContent>Bullet List</TooltipContent>\r\n// //                             </TooltipTrigger>\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         Bullet List\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //                  <Tooltip>\r\n// //                     <TooltipTrigger asChild>\r\n// //                         <Toggle\r\n// //                             size=\"sm\"\r\n// //                             pressed={editor.isActive(\"orderedList\")}\r\n// //                             onPressedChange={() => {\r\n// //                                 editor.chain().focus().toggleOrderedList().run();\r\n// //                             }}\r\n// //                             className={cn(\r\n// //                                 editor.isActive(\"orderedList\") && \"bg-muted text-muted-foreground\"\r\n// //                             )}\r\n// //                         >\r\n// //                             <ListOrdered />\r\n// //                             <TooltipTrigger>\r\n// //                                 <TooltipContent>Ordered List</TooltipContent>\r\n// //                             </TooltipTrigger>\r\n// //                         </Toggle>\r\n// //                     </TooltipTrigger>\r\n// //                     <TooltipContent>\r\n// //                         Ordered List\r\n// //                     </TooltipContent>\r\n// //                 </Tooltip>\r\n// //             {/* </div> */}\r\n// // {/* another div */}\r\n// //             <div className=\"w-px h-6 bg-border mx-2\">\r\n\r\n// //             </div>\r\n// //         </TooltipProvider>\r\n// //     );\r\n\r\n// // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // mari rit\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider } from \"@/components/ui/tooltip\";\r\n// import { Editor } from \"@tiptap/react\";\r\n// import { Toggle } from \"../ui/toggle\";\r\n// import { AlignCenter, AlignLeft, AlignRight, Bold, Ghost, Heading1Icon, Heading2Icon, Heading3Icon, Italic, ListIcon, ListOrdered, Redo, Strikethrough, Undo } from \"lucide-react\";\r\n// import { cn } from \"@/lib/utils\";\r\n// // import TextAlign from \"@tiptap/extension-text-align\";\r\n// import TextAlign from \"@tiptap/extension-text-align\";\r\n// import { Button } from \"../ui/button\";\r\n\r\n// interface IAppProps {\r\n//     editor: Editor | null;\r\n// }\r\n\r\n// export function Menubar({ editor }: IAppProps) {\r\n//     if (!editor) return null;\r\n\r\n//     return (\r\n//         <div className=\"border border-input border-t-0 border-x-0 rounded-t-lg p-2 bg-card flex flex-wrap gap-1 items-center\">\r\n//             <TooltipProvider>\r\n//                 <div className=\"flex flex-wrap gap-1\">\r\n//                     {/* Bold */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"bold\")}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleBold().run()}\r\n//                                 className={cn(editor.isActive(\"bold\") && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <Bold />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Bold</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Italic */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"italic\")}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleItalic().run()}\r\n//                                 className={cn(editor.isActive(\"italic\") && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <Italic />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Italic</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Strike */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"strike\")}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleStrike().run()}\r\n//                                 className={cn(editor.isActive(\"strike\") && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <Strikethrough />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Strike</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Heading 1 */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"heading\", { level: 1 })}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\r\n//                                 className={cn(editor.isActive(\"heading\", { level: 1 }) && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <Heading1Icon />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Heading 1</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Heading 2 */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"heading\", { level: 2 })}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\r\n//                                 className={cn(editor.isActive(\"heading\", { level: 2 }) && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <Heading2Icon />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Heading 2</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Heading 3 */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"heading\", { level: 3 })}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleHeading({ level: 3 }).run()}\r\n//                                 className={cn(editor.isActive(\"heading\", { level: 3 }) && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <Heading3Icon />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Heading 3</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Bullet List */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"bulletList\")}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleBulletList().run()}\r\n//                                 className={cn(editor.isActive(\"bulletList\") && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <ListIcon />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Bullet List</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                     {/* Ordered List */}\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive(\"orderedList\")}\r\n//                                 onPressedChange={() => editor.chain().focus().toggleOrderedList().run()}\r\n//                                 className={cn(editor.isActive(\"orderedList\") && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <ListOrdered />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Ordered List</TooltipContent>\r\n//                     </Tooltip>\r\n//                 </div>\r\n\r\n//                 {/* Divider */}\r\n//                 <div className=\"w-px h-6 bg-border mx-2\"></div>\r\n//                 <div className=\"flex flex-wrap gap-1\">\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive({ textAlign: 'left' })}\r\n//                                 onPressedChange={() => editor.chain().focus().setTextAlign(\"left\").run()}\r\n//                                 className={cn(editor.isActive({ TextAlign: \"left\" }) && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <AlignLeft />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Align Left</TooltipContent>\r\n//                     </Tooltip>\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive({ textAlign: \"center\" })}\r\n//                                 onPressedChange={() => editor.chain().focus().setTextAlign(\"center\").run()}\r\n//                                 className={cn(editor.isActive({ TextAlign: \"center\" }) && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <AlignCenter />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Align Right</TooltipContent>\r\n//                     </Tooltip>\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Toggle\r\n//                                 size=\"sm\"\r\n//                                 pressed={editor.isActive({ textAlign: 'right' })}\r\n//                                 onPressedChange={() => editor.chain().focus().setTextAlign(\"right\").run()}\r\n//                                 className={cn(editor.isActive({ TextAlign: \"right\" }) && \"bg-muted text-muted-foreground\")}\r\n//                             >\r\n//                                 <AlignRight />\r\n//                             </Toggle>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Align Right</TooltipContent>\r\n//                     </Tooltip>\r\n//                 </div>\r\n//                 <div className=\"w-px h-6 bg-border mx-2\">\r\n\r\n//                 </div>\r\n//                 <div className=\"flex flex-wrap gap-1\">\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Button size=\"sm\" variant=\"ghost\" type=\"button\" onClick={() => editor.chain().focus().undo().run()}\r\n//                               disabled={!editor.can().undo()}  \r\n//                             >\r\n//                                 <Undo />\r\n//                             </Button>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Undo</TooltipContent>\r\n//                     </Tooltip>\r\n//                     <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                             <Button size=\"sm\" variant=\"ghost\" type=\"button\" onClick={() => editor.chain().focus().redo().run()}\r\n//                               disabled={!editor.can().redo()}  \r\n//                             >\r\n//                                 <Redo />\r\n//                             </Button>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>Redo</TooltipContent>\r\n//                     </Tooltip>\r\n\r\n//                 </div>\r\n//             </TooltipProvider>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider } from \"@/components/ui/tooltip\";\r\nimport { Editor } from \"@tiptap/react\";\r\nimport { Toggle } from \"../ui/toggle\";\r\nimport { AlignCenter, AlignLeft, AlignRight, Bold, Heading1Icon, Heading2Icon, Heading3Icon, Italic, ListIcon, ListOrdered, Redo, Strikethrough, Undo } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Button } from \"../ui/button\";\r\n\r\ninterface IAppProps {\r\n    editor: Editor | null;\r\n}\r\n\r\nexport function Menubar({ editor }: IAppProps) {\r\n    if (!editor) return null;\r\n\r\n    return (\r\n        <div className=\"border border-input border-t-0 border-x-0 rounded-t-lg p-2 bg-card flex flex-wrap gap-1 items-center\">\r\n            <TooltipProvider>\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                    {/* Bold */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"bold\")}\r\n                                onPressedChange={() => editor.chain().focus().toggleBold().run()}\r\n                                className={cn(editor.isActive(\"bold\") && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <Bold />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Bold</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Italic */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"italic\")}\r\n                                onPressedChange={() => editor.chain().focus().toggleItalic().run()}\r\n                                className={cn(editor.isActive(\"italic\") && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <Italic />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Italic</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Strike */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"strike\")}\r\n                                onPressedChange={() => editor.chain().focus().toggleStrike().run()}\r\n                                className={cn(editor.isActive(\"strike\") && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <Strikethrough />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Strike</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Heading 1 */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"heading\", { level: 1 })}\r\n                                onPressedChange={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\r\n                                className={cn(editor.isActive(\"heading\", { level: 1 }) && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <Heading1Icon />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Heading 1</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Heading 2 */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"heading\", { level: 2 })}\r\n                                onPressedChange={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\r\n                                className={cn(editor.isActive(\"heading\", { level: 2 }) && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <Heading2Icon />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Heading 2</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Heading 3 */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"heading\", { level: 3 })}\r\n                                onPressedChange={() => editor.chain().focus().toggleHeading({ level: 3 }).run()}\r\n                                className={cn(editor.isActive(\"heading\", { level: 3 }) && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <Heading3Icon />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Heading 3</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Bullet List */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"bulletList\")}\r\n                                onPressedChange={() => editor.chain().focus().toggleBulletList().run()}\r\n                                className={cn(editor.isActive(\"bulletList\") && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <ListIcon />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Bullet List</TooltipContent>\r\n                    </Tooltip>\r\n\r\n                    {/* Ordered List */}\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive(\"orderedList\")}\r\n                                onPressedChange={() => editor.chain().focus().toggleOrderedList().run()}\r\n                                className={cn(editor.isActive(\"orderedList\") && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <ListOrdered />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Ordered List</TooltipContent>\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {/* Divider */}\r\n                <div className=\"w-px h-6 bg-border mx-2\"></div>\r\n                \r\n                {/* Text Alignment Controls */}\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive({ textAlign: 'left' })}\r\n                                onPressedChange={() => editor.chain().focus().setTextAlign(\"left\").run()}\r\n                                className={cn(editor.isActive({ textAlign: \"left\" }) && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <AlignLeft />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Align Left</TooltipContent>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive({ textAlign: \"center\" })}\r\n                                onPressedChange={() => editor.chain().focus().setTextAlign(\"center\").run()}\r\n                                className={cn(editor.isActive({ textAlign: \"center\" }) && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <AlignCenter />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Align Center</TooltipContent>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Toggle\r\n                                size=\"sm\"\r\n                                pressed={editor.isActive({ textAlign: 'right' })}\r\n                                onPressedChange={() => editor.chain().focus().setTextAlign(\"right\").run()}\r\n                                className={cn(editor.isActive({ textAlign: \"right\" }) && \"bg-muted text-muted-foreground\")}\r\n                            >\r\n                                <AlignRight />\r\n                            </Toggle>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Align Right</TooltipContent>\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {/* Divider */}\r\n                <div className=\"w-px h-6 bg-border mx-2\"></div>\r\n                \r\n                {/* Undo/Redo Controls */}\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                variant=\"ghost\" \r\n                                type=\"button\" \r\n                                onClick={() => editor.chain().focus().undo().run()}\r\n                                disabled={!editor.can().undo()}  \r\n                            >\r\n                                <Undo />\r\n                            </Button>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Undo</TooltipContent>\r\n                    </Tooltip>\r\n                    \r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <Button \r\n                                size=\"sm\" \r\n                                variant=\"ghost\" \r\n                                type=\"button\" \r\n                                onClick={() => editor.chain().focus().redo().run()}\r\n                                disabled={!editor.can().redo()}  \r\n                            >\r\n                                <Redo />\r\n                            </Button>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent>Redo</TooltipContent>\r\n                    </Tooltip>\r\n                </div>\r\n            </TooltipProvider>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1748, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/rich-text-editor/Editor.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n\r\n// import { useEditor } from \"@tiptap/react\";\r\n// import StarterKit from \"@tiptap/starter-kit\";\r\n\r\n\r\n// export function RichTextEditor() {\r\n//     const editor = useEditor({\r\n//         extensions: [StarterKit],\r\n//     })\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useEditor } from \"@tiptap/react\";\r\n// import StarterKit from \"@tiptap/starter-kit\";\r\n// import { Menubar } from \"./Menubar\";\r\n\r\n// export function RichTextEditor() {\r\n//   const editor = useEditor({\r\n//     extensions: [StarterKit],\r\n//   });\r\n\r\n//   return (\r\n//     <Menubar/>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n// from chat gpt\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { EditorContent, useEditor } from \"@tiptap/react\";\r\n// import StarterKit from \"@tiptap/starter-kit\";\r\n// import { Menubar } from \"./Menubar\";\r\n// // import TextAlign from \"@/tiptap/extension-text-align\";\r\n// import TextAlign from \"@tiptap/extension-text-align\";\r\n\r\n// export function RichTextEditor({ field }: { field: any }) {\r\n//     const editor = useEditor({\r\n//         extensions: [StarterKit, TextAlign.configure({\r\n//             types: ['heading', \"paragraph\"]\r\n//         })\r\n//         ],\r\n//         immediatelyRender: false,\r\n//         editorProps: {\r\n//             attributes: {\r\n//                 class: \"min-h-[300px] p-4 focus:outline-none prose prose-sm sm:prose lg:prose-lg xl:prose-xl dark:prose-invert !w-full !max-w-none\",\r\n//             },\r\n//         },\r\n//         onUpdate: ({ editor }) => {\r\n//             field.onChange(JSON.stringify(editor.getJSON()));\r\n//         },\r\n\r\n//         content: field.value ? JSON.parse(field.value) : \"<p>hello world 🍭 </p>\"\r\n//     });\r\n//     return (\r\n//         <div className=\"w-full border border-input rounded-lg overflow-hidden dark:bg-input/30\" >\r\n//             <Menubar editor={editor} />\r\n//             <EditorContent editor={editor} />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport { EditorContent, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { Menubar } from \"./Menubar\";\r\nimport TextAlign from \"@tiptap/extension-text-align\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function RichTextEditor({ field }: { field: any }) {\r\n    const editor = useEditor({\r\n        extensions: [\r\n            StarterKit, \r\n            TextAlign.configure({\r\n                types: ['heading', 'paragraph'] // Fixed: removed extra quotes around paragraph\r\n            })\r\n        ],\r\n        editorProps: {\r\n            attributes: {\r\n                class: \"min-h-[300px] p-4 focus:outline-none prose prose-sm sm:prose lg:prose-lg xl:prose-xl dark:prose-invert !w-full !max-w-none\",\r\n            },\r\n        },\r\n        immediatelyRender: false,\r\n        onUpdate: ({ editor }) => {\r\n            field.onChange(JSON.stringify(editor.getJSON()));\r\n        },\r\n        // Fixed: Added proper error handling and default content\r\n        content: (() => {\r\n            if (!field?.value) {\r\n                return { type: 'doc', content: [{ type: 'paragraph', content: [{ type: 'text', text: 'Hello world 🍭' }] }] };\r\n            }\r\n            \r\n            try {\r\n                // If it's already a string that looks like HTML, convert to proper JSON structure\r\n                if (typeof field.value === 'string' && field.value.startsWith('<')) {\r\n                    return field.value;\r\n                }\r\n                \r\n                // If it's a JSON string, parse it\r\n                if (typeof field.value === 'string') {\r\n                    return JSON.parse(field.value);\r\n                }\r\n                \r\n                // If it's already an object, return as is\r\n                return field.value;\r\n            } catch (error) {\r\n                console.warn('Error parsing editor content:', error);\r\n                return { type: 'doc', content: [{ type: 'paragraph', content: [{ type: 'text', text: 'Hello world 🍭' }] }] };\r\n            }\r\n        })()\r\n    });\r\n\r\n    // Added null check for editor\r\n    if (!editor) {\r\n        return (\r\n            <div className=\"w-full border border-input rounded-lg overflow-hidden dark:bg-input/30\">\r\n                <div className=\"p-4\">Loading editor...</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full border border-input rounded-lg overflow-hidden dark:bg-input/30\">\r\n            <Menubar editor={editor} />\r\n            <EditorContent editor={editor} />\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"AAAA,gBAAgB;AAGhB,6CAA6C;AAC7C,gDAAgD;AAGhD,qCAAqC;AACrC,iCAAiC;AACjC,oCAAoC;AACpC,SAAS;AACT,IAAI;AAMJ,gBAAgB;AAEhB,6CAA6C;AAC7C,gDAAgD;AAChD,uCAAuC;AAEvC,qCAAqC;AACrC,+BAA+B;AAC/B,gCAAgC;AAChC,QAAQ;AAER,aAAa;AACb,iBAAiB;AACjB,MAAM;AACN,IAAI;AAIJ,gBAAgB;AAGhB,gBAAgB;AAEhB,4DAA4D;AAC5D,gDAAgD;AAChD,uCAAuC;AACvC,4DAA4D;AAC5D,wDAAwD;AAExD,8DAA8D;AAC9D,iCAAiC;AACjC,yDAAyD;AACzD,8CAA8C;AAC9C,aAAa;AACb,aAAa;AACb,oCAAoC;AACpC,yBAAyB;AACzB,4BAA4B;AAC5B,uJAAuJ;AACvJ,iBAAiB;AACjB,aAAa;AACb,sCAAsC;AACtC,gEAAgE;AAChE,aAAa;AAEb,oFAAoF;AACpF,UAAU;AACV,eAAe;AACf,oGAAoG;AACpG,0CAA0C;AAC1C,gDAAgD;AAChD,iBAAiB;AACjB,QAAQ;AACR,IAAI;;;;;AAeJ;AACA;AACA;AACA;AALA;;;;;;AAQO,SAAS,eAAe,EAAE,KAAK,EAAkB;IACpD,MAAM,SAAS,CAAA,GAAA,kKAAA,CAAA,YAAS,AAAD,EAAE;QACrB,YAAY;YACR,2JAAA,CAAA,UAAU;YACV,uKAAA,CAAA,UAAS,CAAC,SAAS,CAAC;gBAChB,OAAO;oBAAC;oBAAW;iBAAY,CAAC,+CAA+C;YACnF;SACH;QACD,aAAa;YACT,YAAY;gBACR,OAAO;YACX;QACJ;QACA,mBAAmB;QACnB,UAAU,CAAC,EAAE,MAAM,EAAE;YACjB,MAAM,QAAQ,CAAC,KAAK,SAAS,CAAC,OAAO,OAAO;QAChD;QACA,yDAAyD;QACzD,SAAS,CAAC;YACN,IAAI,CAAC,OAAO,OAAO;gBACf,OAAO;oBAAE,MAAM;oBAAO,SAAS;wBAAC;4BAAE,MAAM;4BAAa,SAAS;gCAAC;oCAAE,MAAM;oCAAQ,MAAM;gCAAiB;6BAAE;wBAAC;qBAAE;gBAAC;YAChH;YAEA,IAAI;gBACA,kFAAkF;gBAClF,IAAI,OAAO,MAAM,KAAK,KAAK,YAAY,MAAM,KAAK,CAAC,UAAU,CAAC,MAAM;oBAChE,OAAO,MAAM,KAAK;gBACtB;gBAEA,kCAAkC;gBAClC,IAAI,OAAO,MAAM,KAAK,KAAK,UAAU;oBACjC,OAAO,KAAK,KAAK,CAAC,MAAM,KAAK;gBACjC;gBAEA,0CAA0C;gBAC1C,OAAO,MAAM,KAAK;YACtB,EAAE,OAAO,OAAO;gBACZ,QAAQ,IAAI,CAAC,iCAAiC;gBAC9C,OAAO;oBAAE,MAAM;oBAAO,SAAS;wBAAC;4BAAE,MAAM;4BAAa,SAAS;gCAAC;oCAAE,MAAM;oCAAQ,MAAM;gCAAiB;6BAAE;wBAAC;qBAAE;gBAAC;YAChH;QACJ,CAAC;IACL;IAEA,8BAA8B;IAC9B,IAAI,CAAC,QAAQ;QACT,qBACI,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;0BAAM;;;;;;;;;;;IAGjC;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,gJAAA,CAAA,UAAO;gBAAC,QAAQ;;;;;;0BACjB,8OAAC,kKAAA,CAAA,gBAAa;gBAAC,QAAQ;;;;;;;;;;;;AAGnC","debugId":null}},
    {"offset": {"line": 1927, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1953, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2103, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 2126, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2349, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/hooks/try-catch.ts"],"sourcesContent":["// // Types for the result object with discriminated union\r\n// type Success<T> = {\r\n//   data: T;\r\n//   error: null;\r\n// };\r\n\r\n// type Failure<E> = {\r\n//   data: null;\r\n//   error: E;\r\n// };\r\n\r\n// type Result<T, E = Error> = Success<T> | Failure<E>;\r\n\r\n// // Main wrapper function\r\n// export async function tryCatch<T, E = Error>({\r\n//   promise,\r\n// }: {\r\n//   promise: Promise<T>;\r\n// }): Promise<Result<T, E>> {\r\n//   try {\r\n//     const data = await promise;\r\n//     return { data, error: null };\r\n//   } catch (error) {\r\n//     return { data: null, error: error as E };\r\n//   }\r\n// }\r\n\r\n// Types for the result object with discriminated union\r\n// type Success<T> = {\r\n//   data: T;\r\n//   error: null;\r\n// };\r\n\r\n// type Failure<E> = {\r\n//   data: null;\r\n//   error: E;\r\n// };\r\n\r\n// type Result<T, E = Error> = Success<T> | Failure<E>;\r\n\r\n// // Main wrapper function\r\n// export async function tryCatch<T, E = Error>(\r\n//   promise: Promise<T>,\r\n// ): Promise<Result<T, E>> {\r\n//   try {\r\n//     const data = await promise;\r\n//     return { data, error: null };\r\n//   } catch (error) {\r\n//     return { data: null, error: error as E };\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// Types for the result object with discriminated union\r\ntype Success<T> = {\r\n  data: T;\r\n  error: null;\r\n};\r\n\r\ntype Failure<E> = {\r\n  data: null;\r\n  error: E;\r\n};\r\n\r\ntype Result<T, E = Error> = Success<T> | Failure<E>;\r\n\r\n// Main wrapper function\r\nexport async function tryCatch<T, E = Error>(\r\n  promise: Promise<T>,\r\n): Promise<Result<T, E>> {\r\n  try {\r\n    const data = await promise;\r\n    return { data, error: null };\r\n  } catch (error) {\r\n    return { data: null, error: error as E };\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,0DAA0D;AAC1D,sBAAsB;AACtB,aAAa;AACb,iBAAiB;AACjB,KAAK;AAEL,sBAAsB;AACtB,gBAAgB;AAChB,cAAc;AACd,KAAK;AAEL,uDAAuD;AAEvD,2BAA2B;AAC3B,iDAAiD;AACjD,aAAa;AACb,OAAO;AACP,yBAAyB;AACzB,8BAA8B;AAC9B,UAAU;AACV,kCAAkC;AAClC,oCAAoC;AACpC,sBAAsB;AACtB,gDAAgD;AAChD,MAAM;AACN,IAAI;AAEJ,uDAAuD;AACvD,sBAAsB;AACtB,aAAa;AACb,iBAAiB;AACjB,KAAK;AAEL,sBAAsB;AACtB,gBAAgB;AAChB,cAAc;AACd,KAAK;AAEL,uDAAuD;AAEvD,2BAA2B;AAC3B,gDAAgD;AAChD,yBAAyB;AACzB,6BAA6B;AAC7B,UAAU;AACV,kCAAkC;AAClC,oCAAoC;AACpC,sBAAsB;AACtB,gDAAgD;AAChD,MAAM;AACN,IAAI;AAKJ,uDAAuD;;;;AAchD,eAAe,SACpB,OAAmB;IAEnB,IAAI;QACF,MAAM,OAAO,MAAM;QACnB,OAAO;YAAE;YAAM,OAAO;QAAK;IAC7B,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,MAAM;YAAM,OAAO;QAAW;IACzC;AACF","debugId":null}},
    {"offset": {"line": 2415, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/lib/zodSchemas.ts"],"sourcesContent":["import { z } from 'zod';\r\n\r\nexport const courseLevels = [\"BEGINNER\", \"INTERMEDIATE\", \"ADVANCED\"] as const;\r\nexport const courseStatus = [\"DRAFT\", \"PUBLISHED\", \"ARCHIVED\"] as const;\r\n\r\nexport const courseCategories = [\r\n  \"Computer Science Fundamentals\",\r\n  \"Data Structures & Algorithms\",\r\n  \"Operating Systems\",\r\n  \"Computer Networks\",\r\n  \"Database Management Systems\",\r\n  \"Software Engineering\",\r\n  \"Web Development\",\r\n  \"Mobile App Development\",\r\n  \"Cloud Computing\",\r\n  \"Cybersecurity\",\r\n  \"Artificial Intelligence\",\r\n  \"Machine Learning\",\r\n  \"Deep Learning\",\r\n  \"Data Science & Analytics\",\r\n  \"Big Data Technologies\",\r\n  \"Programming Languages\",\r\n  \"DevOps & CI/CD\",\r\n  \"Blockchain Development\",\r\n  \"Internet of Things (IoT)\",\r\n  \"Human-Computer Interaction\",\r\n  \"Theory of Computation\",\r\n  \"Compiler Design\",\r\n  \"Parallel & Distributed Systems\",\r\n  \"Virtualization & Containerization\",\r\n  \"Computer Graphics & Vision\",\r\n  \"Quantum Computing\",\r\n  \"Embedded Systems\",\r\n  \"Software Testing & Quality Assurance\"\r\n] as const;\r\n\r\nexport const courseSchema = z.object({\r\n    title: z.string()\r\n        .min(3, { message: \"Title must be at least 3 characters long\" })\r\n        .max(100, { message: \"Title must be at most 100 characters long\" }),\r\n    description: z.string()\r\n        .min(3, { message: \"Description must be at least 3 characters long\" }),\r\n    fileKey: z.string()\r\n        .min(1, { message: \"File is required\" }),\r\n    price: z.coerce.number()\r\n        .min(1, { message: \"Price must be a positive number\" }),\r\n    duration: z.coerce.number()\r\n        .min(1, { message: \"Duration must be at least 1 hour\" })\r\n        .max(500, { message: \"Duration must be at most 500 hours\" }),\r\n    level: z.enum(courseLevels, { message: \"Level is required\" }),\r\n    category: z.enum(courseCategories, { message: \"Category is required\" }),\r\n    smallDescription: z.string()\r\n        .min(3, { message: \"Small description must be at least 3 characters\" })\r\n        .max(200, { message: \"Small description must be at most 200 characters long\" }),\r\n    slug: z.string()\r\n        .min(3, { message: \"Slug must be at least 3 characters long\" }),\r\n    status: z.enum(courseStatus, { message: \"Status is required\" }),\r\n});\r\n\r\nexport type CourseSchemaType = z.infer<typeof courseSchema>;"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,eAAe;IAAC;IAAY;IAAgB;CAAW;AAC7D,MAAM,eAAe;IAAC;IAAS;IAAa;CAAW;AAEvD,MAAM,mBAAmB;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,eAAe,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,OAAO,6KAAA,CAAA,IAAC,CAAC,MAAM,GACV,GAAG,CAAC,GAAG;QAAE,SAAS;IAA2C,GAC7D,GAAG,CAAC,KAAK;QAAE,SAAS;IAA4C;IACrE,aAAa,6KAAA,CAAA,IAAC,CAAC,MAAM,GAChB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAiD;IACxE,SAAS,6KAAA,CAAA,IAAC,CAAC,MAAM,GACZ,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmB;IAC1C,OAAO,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GACjB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkC;IACzD,UAAU,6KAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GACpB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAmC,GACrD,GAAG,CAAC,KAAK;QAAE,SAAS;IAAqC;IAC9D,OAAO,6KAAA,CAAA,IAAC,CAAC,IAAI,CAAC,cAAc;QAAE,SAAS;IAAoB;IAC3D,UAAU,6KAAA,CAAA,IAAC,CAAC,IAAI,CAAC,kBAAkB;QAAE,SAAS;IAAuB;IACrE,kBAAkB,6KAAA,CAAA,IAAC,CAAC,MAAM,GACrB,GAAG,CAAC,GAAG;QAAE,SAAS;IAAkD,GACpE,GAAG,CAAC,KAAK;QAAE,SAAS;IAAwD;IACjF,MAAM,6KAAA,CAAA,IAAC,CAAC,MAAM,GACT,GAAG,CAAC,GAAG;QAAE,SAAS;IAA0C;IACjE,QAAQ,6KAAA,CAAA,IAAC,CAAC,IAAI,CAAC,cAAc;QAAE,SAAS;IAAqB;AACjE","debugId":null}},
    {"offset": {"line": 2505, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/admin/courses/%5BcourseId%5D/edit/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { requireAdmin } from \"@/app/data/admin/require-admin\";\r\nimport { ApiResponse } from \"@/lib/types\";\r\nimport { CourseSchemaType, courseSchema } from \"@/lib/zodSchemas\";\r\nimport { prisma } from \"@/lib/db\";\r\nimport arcjet, { detectBot, fixedWindow } from \"@/lib/arcjet\";\r\nimport { request } from \"@arcjet/next\";\r\nimport { revalidatePath } from \"next/cache\";\r\n// import { User } from \"lucide-react\";\r\n// import { request } from \"http\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst aj = arcjet\r\n    .withRule(\r\n        detectBot({\r\n            mode: \"LIVE\",\r\n            allow: [],\r\n        })\r\n    ).withRule(\r\n        fixedWindow({\r\n            mode: \"LIVE\",\r\n            window: \"1m\",\r\n            max: 2,\r\n        })\r\n    );\r\n\r\n\r\n\r\n// import { requireAdmin } from \"@/app/data/admin/require-admin\";\r\n// import { ApiResponse } from \"@/lib/types\";\r\n\r\n\r\nexport async function editCourse(data: CourseSchemaType, courseId: string): Promise<ApiResponse> {\r\n    try {\r\n        // const req = await request();\r\n        // const decision = await aj.protect(req, {\r\n        //     fingerprint: user.user.id\r\n        // });\r\n\r\n\r\n        const user = await requireAdmin();\r\n        const req = await request();\r\n        const decision = await aj.protect(req, {\r\n            fingerprint: user.user.id,\r\n        });\r\n\r\n\r\n\r\n\r\n        if (decision.isDenied()) {\r\n            if (decision.reason.isRateLimit()) {\r\n                return {\r\n                    status: \"error\",\r\n                    message: \"you have been blocked due to rate limit, from masterji.com\"\r\n                };\r\n            } else {\r\n                return {\r\n                    status: 'error',\r\n                    message: 'i think you are bot'\r\n                };\r\n            }\r\n        }\r\n\r\n\r\n\r\n        try {\r\n            const result = courseSchema.safeParse(data);\r\n\r\n\r\n            if (!result.success) {\r\n                return {\r\n                    status: \"error\",\r\n                    message: \"invalid data\",\r\n                }\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                status: \"error\",\r\n                message: \"Data validation failed\",\r\n            };\r\n        }\r\n\r\n        await prisma.course.update({\r\n            where: {\r\n                id: courseId,\r\n                userId: user.user.id,\r\n            },\r\n            data: {\r\n                ...data,\r\n            }\r\n        });\r\n\r\n        return {\r\n            status: \"success\",\r\n            message: \"Course updated successfully\",\r\n        };\r\n    } catch {\r\n        return {\r\n            status: \"error\",\r\n            message: \"Failed to update course\",\r\n        };\r\n    }\r\n}\r\n\r\nexport async function reorderLesson(\r\n    chapterId: string,\r\n    lesson: { id: string; position: number }[],\r\n    courseId: string\r\n): Promise<ApiResponse> {\r\n    try {\r\n        if (!lesson || lesson.length === 0) {\r\n            return {\r\n                status: \"error\",\r\n                message: \"no lesson provided for reorderning\"\r\n            };\r\n        }\r\n\r\n\r\n        // const updates = lesson.map((lesson) => ({\r\n        //     prisma.lesson.update({\r\n        //         where: {\r\n        //             id: lesson.id,\r\n        //             chapterId: chapterId,\r\n        //         },\r\n        //         data: {\r\n        //             position: lesson\r\n        //         }\r\n        //     })\r\n        // }))\r\n\r\n\r\n        const updates = lesson.map((lesson: { id: string; position: number }) =>\r\n            prisma.lesson.update({\r\n                where: {\r\n                    id: lesson.id,\r\n                    chapterId: chapterId,\r\n                },\r\n                data: {\r\n                    position: lesson.position,\r\n                }\r\n            })\r\n        );\r\n\r\n\r\n        await prisma.$transaction(updates);\r\n\r\n\r\n        revalidatePath(`/admin/courses/${courseId}/edit`)\r\n\r\n\r\n        return {\r\n            status: \"success\",\r\n            message: \"lessons reorder successfully\"\r\n        }\r\n    } catch {\r\n        return {\r\n            status: \"error\",\r\n            message: \"failed to reorder lessson\"\r\n        }\r\n    }\r\n\r\n}"],"names":[],"mappings":";;;;;;IAwCsB,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2516, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/admin/courses/%5BcourseId%5D/edit/_components/EditCourseForm.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { Uploader } from \"@/components/file-uploader/Uploader\";\r\n// import { RichTextEditor } from \"@/components/rich-text-editor/Editor\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { FormField, FormItem, FormLabel, FormControl, FormMessage } from \"@/components/ui/form\";\r\n// import { Input } from \"@/components/ui/input\";\r\n// import { Textarea } from \"@/components/ui/textarea\";\r\n// import { tryCatch } from \"@/hooks/try-catch\";\r\n// import { CourseSchemaType, courseSchema, courseCategories, courseLevels } from \"@/lib/zodSchemas\";\r\n// import { zodResolver } from \"@hookform/resolvers/zod\";\r\n// import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"@radix-ui/react-select\";\r\n// import { SparkleIcon, Loader2, PlusIcon } from \"lucide-react\";\r\n// import { useRouter } from \"next/router\";\r\n// import { useTransition } from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { toast } from \"sonner\";\r\n// import { CreateCourse } from \"../../../create/actions\";\r\n\r\n\r\n// export function EditCourseForm() {\r\n//     const [isPending, startTransition] = useTransition()\r\n//     const router = useRouter();\r\n//     const form = useForm<CourseSchemaType>({\r\n//         resolver: zodResolver(courseSchema),\r\n//         defaultValues: {\r\n//             title: \"\",\r\n//             description: \"\",\r\n//             fileKey: \"\",\r\n//             price: 1,\r\n//             duration: 1,\r\n//             level: \"BEGINNER\",\r\n//             category: \"Computer Science Fundamentals\",\r\n//             smallDescription: \"\",\r\n//             slug: \"\",\r\n//             status: \"DRAFT\"\r\n//         },\r\n//     });\r\n\r\n//     function slugify(titleValue: string) {\r\n//         return titleValue\r\n//             .toLowerCase()\r\n//             .trim()\r\n//             .replace(/[\\s\\W-]+/g, \"-\")\r\n//             .replace(/^-+|-+$/g, \"\");\r\n//     }\r\n\r\n//     function onSubmit(values: CourseSchemaType) {\r\n//         // console.log(values);\r\n//         startTransition(async () => {\r\n//             const { data: result, error } = await tryCatch(CreateCourse(values));\r\n\r\n//             if (error) {\r\n//                 toast.error(\"an unexpected error occurred\")\r\n//                 return;\r\n//             }\r\n\r\n//             if (result.status === 'success') {\r\n//                 toast.success(result.message)\r\n//                 form.reset();\r\n//                 router.push(\"/admin/courses\")\r\n//             } else if (result.status === \"error\") {\r\n//                 toast.error(result.message);\r\n//             }\r\n//         });\r\n//     }\r\n//     return (\r\n//         <form\r\n//             className=\"space-y-6\"\r\n//             onSubmit={form.handleSubmit(onSubmit)}\r\n//         >\r\n//             <FormField\r\n//                 control={form.control}\r\n//                 name=\"title\"\r\n//                 render={({ field }) => (\r\n//                     <FormItem>\r\n//                         <FormLabel>Title</FormLabel>\r\n//                         <FormControl>\r\n//                             <Input placeholder=\"Title\" {...field} />\r\n//                         </FormControl>\r\n//                         <FormMessage />\r\n//                     </FormItem>\r\n//                 )}\r\n//             />\r\n//             <div className=\"flex gap-4 items-end\">\r\n//                 <FormField\r\n//                     control={form.control}\r\n//                     name=\"slug\"\r\n//                     render={({ field }) => (\r\n//                         <FormItem className=\"w-full\">\r\n//                             <FormLabel>Slug</FormLabel>\r\n//                             <FormControl>\r\n//                                 <Input placeholder=\"slug\" {...field} />\r\n//                             </FormControl>\r\n//                             <FormMessage />\r\n//                         </FormItem>\r\n//                     )}\r\n//                 />\r\n//                 <Button\r\n//                     type=\"button\"\r\n//                     className=\"w-fit\"\r\n//                     onClick={() => {\r\n//                         const titleValue = form.getValues(\"title\");\r\n//                         const slug = slugify(titleValue);\r\n//                         form.setValue(\"slug\", slug, { shouldValidate: true });\r\n//                     }}\r\n//                 >\r\n//                     Generate Slug <SparkleIcon className=\"ml-1\" size={16} />\r\n//                 </Button>\r\n//             </div>\r\n//             <FormField\r\n//                 control={form.control}\r\n//                 name=\"smallDescription\"\r\n//                 render={({ field }) => (\r\n//                     <FormItem className=\"w-full\">\r\n//                         <FormLabel>Small Description</FormLabel>\r\n//                         <FormControl>\r\n//                             <Textarea\r\n//                                 placeholder=\"Small description\"\r\n//                                 className=\"min-h-[120px]\"\r\n//                                 {...field}\r\n//                             />\r\n//                         </FormControl>\r\n//                         <FormMessage />\r\n//                     </FormItem>\r\n//                 )}\r\n//             />\r\n\r\n//             <FormField\r\n//                 control={form.control}\r\n//                 name=\"description\"\r\n//                 render={({ field }) => (\r\n//                     <FormItem className=\"w-full\">\r\n//                         <FormLabel>Description</FormLabel>\r\n//                         <FormControl>\r\n//                             <RichTextEditor field={field} />\r\n//                         </FormControl>\r\n//                         <FormMessage />\r\n//                     </FormItem>\r\n//                 )}\r\n//             />\r\n//             <FormField\r\n//                 control={form.control}\r\n//                 name=\"fileKey\"\r\n//                 render={({ field }) => (\r\n//                     <FormItem className=\"w-full\">\r\n//                         <FormLabel>Thumbnail Image</FormLabel>\r\n//                         <FormControl>\r\n//                             <Uploader onChange={field.onChange} value={field.value} />\r\n//                             {/* <Input placeholder=\"thumbnail url\" {...field} /> */}\r\n//                         </FormControl>\r\n//                         <FormMessage />\r\n//                     </FormItem>\r\n//                 )}\r\n//             />\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n//                 <FormField\r\n//                     control={form.control}\r\n//                     name=\"category\"\r\n//                     render={({ field }) => (\r\n//                         <FormItem className=\"w-full\">\r\n//                             <FormLabel>Category</FormLabel>\r\n//                             <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n//                                 <FormControl>\r\n//                                     <SelectTrigger className=\"w-full\">\r\n//                                         <SelectValue placeholder=\"Select Category\" />\r\n//                                     </SelectTrigger>\r\n//                                 </FormControl>\r\n//                                 <SelectContent>\r\n//                                     {courseCategories.map((category) => (\r\n//                                         <SelectItem key={category} value={category}>\r\n//                                             {category}\r\n//                                         </SelectItem>\r\n//                                     ))}\r\n//                                 </SelectContent>\r\n//                             </Select>\r\n//                             <FormMessage />\r\n//                         </FormItem>\r\n//                     )}\r\n//                 />\r\n//                 <FormField\r\n//                     control={form.control}\r\n//                     name=\"level\"\r\n//                     render={({ field }) => (\r\n//                         <FormItem className=\"w-full\">\r\n//                             <FormLabel>Level</FormLabel>\r\n//                             <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n//                                 <FormControl>\r\n//                                     <SelectTrigger className=\"w-full\">\r\n//                                         <SelectValue placeholder=\"Select Level\" />\r\n//                                     </SelectTrigger>\r\n//                                 </FormControl>\r\n//                                 <SelectContent>\r\n//                                     {courseLevels.map((level) => (\r\n//                                         <SelectItem key={level} value={level}>\r\n//                                             {level}\r\n//                                         </SelectItem>\r\n//                                     ))}\r\n//                                 </SelectContent>\r\n//                             </Select>\r\n//                             <FormMessage />\r\n//                         </FormItem>\r\n//                     )}\r\n//                 />\r\n//                 <FormField\r\n//                     control={form.control}\r\n//                     name=\"duration\"\r\n//                     render={({ field }) => (\r\n//                         <FormItem className=\"w-full\">\r\n//                             <FormLabel>Duration (hours)</FormLabel>\r\n//                             <FormControl>\r\n//                                 <Input\r\n//                                     placeholder=\"Course Duration\"\r\n//                                     type=\"number\"\r\n//                                     min=\"1\"\r\n//                                     max=\"500\"\r\n//                                     {...field}\r\n//                                 />\r\n//                             </FormControl>\r\n//                             <FormMessage />\r\n//                         </FormItem>\r\n//                     )}\r\n//                 />\r\n//                 <FormField\r\n//                     control={form.control}\r\n//                     name=\"price\"\r\n//                     render={({ field }) => (\r\n//                         <FormItem className=\"w-full\">\r\n//                             <FormLabel>Course Price ($)</FormLabel>\r\n//                             <FormControl>\r\n//                                 <Input\r\n//                                     placeholder=\"Course Price\"\r\n//                                     type=\"number\"\r\n//                                     min=\"1\"\r\n//                                     {...field}\r\n//                                 />\r\n//                             </FormControl>\r\n//                             <FormMessage />\r\n//                         </FormItem>\r\n//                     )}\r\n//                 />\r\n//             </div>\r\n//             <Button type=\"submit\" disabled={isPending}>\r\n//                 {isPending ? (\r\n//                     <>\r\n//                         Creating...\r\n//                         <Loader2 className=\"animate-spin\" />\r\n//                     </>\r\n//                 ) : (\r\n//                     <>\r\n//                         Create Course <PlusIcon className=\"ml-1\" size={16} />\r\n//                     </>\r\n//                 )}\r\n//             </Button>\r\n//         </form>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport { Uploader } from \"@/components/file-uploader/Uploader\";\r\nimport { RichTextEditor } from \"@/components/rich-text-editor/Editor\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Form, FormField, FormItem, FormLabel, FormControl, FormMessage } from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from \"@/components/ui/select\";\r\nimport { tryCatch } from \"@/hooks/try-catch\";\r\nimport { CourseSchemaType, courseSchema, courseCategories, courseLevels } from \"@/lib/zodSchemas\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { SparkleIcon, Loader2, PlusIcon } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useTransition } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"sonner\";\r\n// import { CreateCourse } from \"../../../create/actions\";\r\nimport { editCourse } from \"../actions\";\r\nimport { AdminCourseSingularType } from \"@/app/data/admin/admin-get-course\";\r\n\r\ninterface iAppProps {\r\n    data: AdminCourseSingularType\r\n}\r\n\r\nexport function EditCourseForm({ data }: iAppProps) {\r\n    const [isPending, startTransition] = useTransition();\r\n    const router = useRouter();\r\n\r\n    const form = useForm<CourseSchemaType>({\r\n        resolver: zodResolver(courseSchema),\r\n        defaultValues: {\r\n            title: data.title,\r\n            description: data.description,\r\n            fileKey: data.fileKey,\r\n            price: data.price,\r\n            duration: data.duration,\r\n            level: data.level,\r\n            category: \"Computer Science Fundamentals\" as CourseSchemaType['category'],\r\n            smallDescription: data.smallDescription,\r\n            slug: data.slug,\r\n            status: data.status\r\n        },\r\n    });\r\n\r\n    const slugify = (titleValue: string): string => {\r\n        return titleValue\r\n            .toLowerCase()\r\n            .trim()\r\n            .replace(/[\\s\\W-]+/g, \"-\")\r\n            .replace(/^-+|-+$/g, \"\");\r\n    };\r\n\r\n    const handleGenerateSlug = () => {\r\n        const titleValue = form.getValues(\"title\");\r\n        if (titleValue) {\r\n            const slug = slugify(titleValue);\r\n            form.setValue(\"slug\", slug, { shouldValidate: true });\r\n        }\r\n    };\r\n\r\n    const onSubmit = (values: CourseSchemaType) => {\r\n        startTransition(async () => {\r\n            try {\r\n                const { data: result, error } = await tryCatch(editCourse(values, data.id));\r\n\r\n                if (error) {\r\n                    toast.error(\"An unexpected error occurred\");\r\n                    return;\r\n                }\r\n\r\n                if (result?.status === 'success') {\r\n                    toast.success(result.message);\r\n                    form.reset();\r\n                    router.push(\"/admin/courses\");\r\n                } else if (result?.status === \"error\") {\r\n                    toast.error(result.message);\r\n                }\r\n            } catch (err) {\r\n                toast.error(\"An unexpected error occurred\");\r\n                console.error(err);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form {...form}>\r\n            <form\r\n                className=\"space-y-6\"\r\n                onSubmit={form.handleSubmit(onSubmit)}\r\n            >\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"title\"\r\n                    render={({ field }) => (\r\n                        <FormItem>\r\n                            <FormLabel>Title</FormLabel>\r\n                            <FormControl>\r\n                                <Input placeholder=\"Title\" {...field} />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <div className=\"flex gap-4 items-end\">\r\n                    <FormField\r\n                        control={form.control}\r\n                        name=\"slug\"\r\n                        render={({ field }) => (\r\n                            <FormItem className=\"w-full\">\r\n                                <FormLabel>Slug</FormLabel>\r\n                                <FormControl>\r\n                                    <Input placeholder=\"slug\" {...field} />\r\n                                </FormControl>\r\n                                <FormMessage />\r\n                            </FormItem>\r\n                        )}\r\n                    />\r\n                    <Button\r\n                        type=\"button\"\r\n                        className=\"w-fit\"\r\n                        onClick={() => {\r\n                            const titleValue = form.getValues(\"title\");\r\n                            const slug = slugify(titleValue);\r\n                            form.setValue(\"slug\", slug, { shouldValidate: true });\r\n                        }}\r\n                    >\r\n                        Generate Slug <SparkleIcon className=\"ml-1\" size={16} />\r\n                    </Button>\r\n                </div>\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"smallDescription\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Small Description</FormLabel>\r\n                            <FormControl>\r\n                                <Textarea\r\n                                    placeholder=\"Small description\"\r\n                                    className=\"min-h-[120px]\"\r\n                                    {...field}\r\n                                />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"description\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Description</FormLabel>\r\n                            <FormControl>\r\n                                <RichTextEditor field={field} />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"fileKey\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Thumbnail Image</FormLabel>\r\n                            <FormControl>\r\n                                <Uploader onChange={field.onChange} value={field.value} />\r\n                                {/* <Input placeholder=\"thumbnail url\" {...field} /> */}\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <FormField\r\n                        control={form.control}\r\n                        name=\"category\"\r\n                        render={({ field }) => (\r\n                            <FormItem className=\"w-full\">\r\n                                <FormLabel>Category</FormLabel>\r\n                                <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                    <FormControl>\r\n                                        <SelectTrigger className=\"w-full\">\r\n                                            <SelectValue placeholder=\"Select Category\" />\r\n                                        </SelectTrigger>\r\n                                    </FormControl>\r\n                                    <SelectContent>\r\n                                        {courseCategories.map((category) => (\r\n                                            <SelectItem key={category} value={category}>\r\n                                                {category}\r\n                                            </SelectItem>\r\n                                        ))}\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <FormMessage />\r\n                            </FormItem>\r\n                        )}\r\n                    />\r\n                    <FormField\r\n                        control={form.control}\r\n                        name=\"level\"\r\n                        render={({ field }) => (\r\n                            <FormItem className=\"w-full\">\r\n                                <FormLabel>Level</FormLabel>\r\n                                <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                    <FormControl>\r\n                                        <SelectTrigger className=\"w-full\">\r\n                                            <SelectValue placeholder=\"Select Level\" />\r\n                                        </SelectTrigger>\r\n                                    </FormControl>\r\n                                    <SelectContent>\r\n                                        {courseLevels.map((level) => (\r\n                                            <SelectItem key={level} value={level}>\r\n                                                {level}\r\n                                            </SelectItem>\r\n                                        ))}\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <FormMessage />\r\n                            </FormItem>\r\n                        )}\r\n                    />\r\n                    <FormField\r\n                        control={form.control}\r\n                        name=\"duration\"\r\n                        render={({ field }) => (\r\n                            <FormItem className=\"w-full\">\r\n                                <FormLabel>Duration (hours)</FormLabel>\r\n                                <FormControl>\r\n                                    <Input\r\n                                        placeholder=\"Course Duration\"\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        max=\"500\"\r\n                                        {...field}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormMessage />\r\n                            </FormItem>\r\n                        )}\r\n                    />\r\n                    <FormField\r\n                        control={form.control}\r\n                        name=\"price\"\r\n                        render={({ field }) => (\r\n                            <FormItem className=\"w-full\">\r\n                                <FormLabel>Course Price ($)</FormLabel>\r\n                                <FormControl>\r\n                                    <Input\r\n                                        placeholder=\"Course Price\"\r\n                                        type=\"number\"\r\n                                        min=\"1\"\r\n                                        {...field}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormMessage />\r\n                            </FormItem>\r\n                        )}\r\n                    />\r\n                </div>\r\n                <Button type=\"submit\" disabled={isPending}>\r\n                    {isPending ? (\r\n                        <>\r\n                            Updating...\r\n                            <Loader2 className=\"animate-spin\" />\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            Update Course <PlusIcon className=\"ml-1\" size={16} />\r\n                        </>\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </Form>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3406, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/collapsible.tsx"],"sourcesContent":["\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nfunction Collapsible({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {\n  return <CollapsiblePrimitive.Root data-slot=\"collapsible\" {...props} />\n}\n\nfunction CollapsibleTrigger({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleTrigger\n      data-slot=\"collapsible-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction CollapsibleContent({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleContent\n      data-slot=\"collapsible-content\"\n      {...props}\n    />\n  )\n}\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n"],"names":[],"mappings":";;;;;;AAEA;AAFA;;;AAIA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,8OAAC,uKAAA,CAAA,OAAyB;QAAC,aAAU;QAAe,GAAG,KAAK;;;;;;AACrE;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACkE;IACrE,qBACE,8OAAC,uKAAA,CAAA,qBAAuC;QACtC,aAAU;QACT,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,mBAAmB,EAC1B,GAAG,OACkE;IACrE,qBACE,8OAAC,uKAAA,CAAA,qBAAuC;QACtC,aAAU;QACT,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 3451, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/admin/courses/%5BcourseId%5D/edit/actions.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { requireAdmin } from \"@/app/data/admin/require-admin\";\r\nimport { ApiResponse } from \"@/lib/types\";\r\nimport { CourseSchemaType, courseSchema } from \"@/lib/zodSchemas\";\r\nimport { prisma } from \"@/lib/db\";\r\nimport arcjet, { detectBot, fixedWindow } from \"@/lib/arcjet\";\r\nimport { request } from \"@arcjet/next\";\r\nimport { revalidatePath } from \"next/cache\";\r\n// import { User } from \"lucide-react\";\r\n// import { request } from \"http\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst aj = arcjet\r\n    .withRule(\r\n        detectBot({\r\n            mode: \"LIVE\",\r\n            allow: [],\r\n        })\r\n    ).withRule(\r\n        fixedWindow({\r\n            mode: \"LIVE\",\r\n            window: \"1m\",\r\n            max: 2,\r\n        })\r\n    );\r\n\r\n\r\n\r\n// import { requireAdmin } from \"@/app/data/admin/require-admin\";\r\n// import { ApiResponse } from \"@/lib/types\";\r\n\r\n\r\nexport async function editCourse(data: CourseSchemaType, courseId: string): Promise<ApiResponse> {\r\n    try {\r\n        // const req = await request();\r\n        // const decision = await aj.protect(req, {\r\n        //     fingerprint: user.user.id\r\n        // });\r\n\r\n\r\n        const user = await requireAdmin();\r\n        const req = await request();\r\n        const decision = await aj.protect(req, {\r\n            fingerprint: user.user.id,\r\n        });\r\n\r\n\r\n\r\n\r\n        if (decision.isDenied()) {\r\n            if (decision.reason.isRateLimit()) {\r\n                return {\r\n                    status: \"error\",\r\n                    message: \"you have been blocked due to rate limit, from masterji.com\"\r\n                };\r\n            } else {\r\n                return {\r\n                    status: 'error',\r\n                    message: 'i think you are bot'\r\n                };\r\n            }\r\n        }\r\n\r\n\r\n\r\n        try {\r\n            const result = courseSchema.safeParse(data);\r\n\r\n\r\n            if (!result.success) {\r\n                return {\r\n                    status: \"error\",\r\n                    message: \"invalid data\",\r\n                }\r\n            }\r\n        } catch (error) {\r\n            return {\r\n                status: \"error\",\r\n                message: \"Data validation failed\",\r\n            };\r\n        }\r\n\r\n        await prisma.course.update({\r\n            where: {\r\n                id: courseId,\r\n                userId: user.user.id,\r\n            },\r\n            data: {\r\n                ...data,\r\n            }\r\n        });\r\n\r\n        return {\r\n            status: \"success\",\r\n            message: \"Course updated successfully\",\r\n        };\r\n    } catch {\r\n        return {\r\n            status: \"error\",\r\n            message: \"Failed to update course\",\r\n        };\r\n    }\r\n}\r\n\r\nexport async function reorderLesson(\r\n    chapterId: string,\r\n    lesson: { id: string; position: number }[],\r\n    courseId: string\r\n): Promise<ApiResponse> {\r\n    try {\r\n        if (!lesson || lesson.length === 0) {\r\n            return {\r\n                status: \"error\",\r\n                message: \"no lesson provided for reorderning\"\r\n            };\r\n        }\r\n\r\n\r\n        // const updates = lesson.map((lesson) => ({\r\n        //     prisma.lesson.update({\r\n        //         where: {\r\n        //             id: lesson.id,\r\n        //             chapterId: chapterId,\r\n        //         },\r\n        //         data: {\r\n        //             position: lesson\r\n        //         }\r\n        //     })\r\n        // }))\r\n\r\n\r\n        const updates = lesson.map((lesson: { id: string; position: number }) =>\r\n            prisma.lesson.update({\r\n                where: {\r\n                    id: lesson.id,\r\n                    chapterId: chapterId,\r\n                },\r\n                data: {\r\n                    position: lesson.position,\r\n                }\r\n            })\r\n        );\r\n\r\n\r\n        await prisma.$transaction(updates);\r\n\r\n\r\n        revalidatePath(`/admin/courses/${courseId}/edit`)\r\n\r\n\r\n        return {\r\n            status: \"success\",\r\n            message: \"lessons reorder successfully\"\r\n        }\r\n    } catch {\r\n        return {\r\n            status: \"error\",\r\n            message: \"failed to reorder lessson\"\r\n        }\r\n    }\r\n\r\n}"],"names":[],"mappings":";;;;;;IAgHsB,gBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 3462, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/admin/courses/%5BcourseId%5D/edit/_components/CourseStructure.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n// import { DndContext, DraggableSyntheticListeners, KeyboardSensor, PointerSensor, rectIntersection, useSensor, useSensors, DragEndEvent } from \"@dnd-kit/core\";\r\n// import { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\n// import { ReactNode, useState } from \"react\";\r\n// import { CSS } from \"@dnd-kit/utilities\";\r\n// import { AdminCourseSingularType } from \"@/app/data/admin/admin-get-course\";\r\n// import { string } from \"zod\";\r\n// import { cn } from \"@/lib/utils\";\r\n// import { listenKeys } from \"better-auth/react\";\r\n// import { Collapsible } from \"@radix-ui/react-collapsible\";\r\n// import { GripVertical } from \"lucide-react\";\r\n\r\n// interface iAppProps {\r\n//     data: AdminCourseSingularType\r\n// }\r\n\r\n// interface ChapterItem {\r\n//     id: string;\r\n//     title: string;\r\n//     order: number;\r\n//     isOpen: boolean;\r\n//     lessons: {\r\n//         id: string;\r\n//         title: string;\r\n//         order: number;\r\n//     }[];\r\n// }\r\n\r\n// interface SortableItemProps {\r\n//     id: string;\r\n//     children: (listeners: DraggableSyntheticListeners) => ReactNode\r\n//     className?: string,\r\n//     data?: {\r\n//         type: \"chapter\" | \"lesson\";\r\n//         chapterId?: string;\r\n//     }\r\n// }\r\n\r\n// export function CourseStructure({ data }: iAppProps) {\r\n//     const initialItems: ChapterItem[] = Array.isArray((data as any)?.chapter)\r\n//         ? (data as any).chapter.map((chapter: any) => ({\r\n//             id: chapter.id,\r\n//             title: chapter.title || `Chapter ${chapter.position}`,\r\n//             order: chapter.position,\r\n//             isOpen: false,\r\n//             lessons: Array.isArray(chapter.lessons)\r\n//                 ? chapter.lessons.map((lesson: any) => ({\r\n//                     id: lesson.id,\r\n//                     title: lesson.title || `Lesson ${lesson.position}`,\r\n//                     order: lesson.position,\r\n//                 }))\r\n//                 : [],\r\n//         }))\r\n//         : [];\r\n\r\n//     const [items, setItems] = useState<ChapterItem[]>(initialItems);\r\n\r\n//     function SortableItem({ children, id, className, data }: SortableItemProps) {\r\n//         const {\r\n//             attributes,\r\n//             listeners,\r\n//             setNodeRef,\r\n//             transform,\r\n//             transition,\r\n//             isDragging,\r\n//         } = useSortable({ id, data });\r\n\r\n//         const style = {\r\n//             transform: CSS.Transform.toString(transform),\r\n//             transition,\r\n//         };\r\n\r\n//         return (\r\n//             <div \r\n//                 ref={setNodeRef} \r\n//                 style={style} \r\n//                 {...attributes}\r\n//                 className={cn(\"touch-none\", className, isDragging && \"opacity-50\")}\r\n//             >\r\n//                 {children(listeners)}\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     function handleDragEnd(event: DragEndEvent) {\r\n//         const { active, over } = event;\r\n\r\n//         if (!over || active.id === over.id) return;\r\n\r\n//         setItems((items) => {\r\n//             const oldIndex = items.findIndex(item => item.id === active.id.toString());\r\n//             const newIndex = items.findIndex(item => item.id === over.id.toString());\r\n\r\n//             if (oldIndex === -1 || newIndex === -1) return items;\r\n\r\n//             const newItems = arrayMove(items, oldIndex, newIndex);\r\n\r\n//             // Update the order property based on new position\r\n//             return newItems.map((item, index) => ({\r\n//                 ...item,\r\n//                 order: index + 1,\r\n//                 lessons: item.lessons.map((lesson, lessonIndex) => ({\r\n//                     ...lesson,\r\n//                     order: lessonIndex + 1\r\n//                 }))\r\n//             }));\r\n//         });\r\n//     }\r\n\r\n//     function toggleChapter(chapterId: string) {\r\n//         setItems((prevItems) =>\r\n//             prevItems.map((chapter) =>\r\n//                 chapter.id === chapterId\r\n//                     ? { ...chapter, isOpen: !chapter.isOpen }\r\n//                     : chapter\r\n//             )\r\n//         );\r\n//     }\r\n\r\n//     const sensors = useSensors(\r\n//         useSensor(PointerSensor),\r\n//         useSensor(KeyboardSensor, {\r\n//             coordinateGetter: sortableKeyboardCoordinates,\r\n//         })\r\n//     );\r\n//     return (\r\n//         <DndContext collisionDetection={rectIntersection} onDragEnd={handleDragEnd} sensors={sensors}>\r\n//             <Card>\r\n//                 <CardHeader className=\"flex flex-row items-center justify-between border-b border-border\">\r\n//                     <CardTitle>Chapters</CardTitle>\r\n//                 </CardHeader>\r\n//                 <CardContent>\r\n//                     <SortableContext\r\n//                         items={items}\r\n//                         strategy={verticalListSortingStrategy}>\r\n//                         {items.map((item) => (\r\n//                             <SortableItem\r\n//                                 id={item.id}\r\n//                                 data={{ type: \"chapter\" }}\r\n//                                 key={item.id}\r\n//                             >\r\n//                                 {(listeners: DraggableSyntheticListeners) => (\r\n//                                     <Card>\r\n//                                         <Collapsible\r\n//                                             open={item.isOpen}\r\n//                                             onOpenChange={() => toggleChapter(item.id)}\r\n//                                         >\r\n//                                             <div className=\"flex items-center justify-center p-3 border-b border-border\">\r\n//                                                 <div className=\"flex items-center gap-2\">\r\n//                                                     <button className=\"cursor-grab opacity-60 hover:opacity-100\" {...listeners}>\r\n//                                                         <GripVertical className=\"size-4\" />\r\n//                                                     </button>\r\n//                                                 </div>\r\n//                                             </div>\r\n//                                         </Collapsible>\r\n//                                     </Card>\r\n//                                 )}\r\n//                             </SortableItem>\r\n//                         ))}\r\n//                     </SortableContext>\r\n//                 </CardContent>\r\n//             </Card>\r\n//         </DndContext>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { DndContext, DraggableSyntheticListeners, KeyboardSensor, PointerSensor, rectIntersection, useSensor, useSensors, DragEndEvent } from \"@dnd-kit/core\";\r\nimport { arrayMove, SortableContext, sortableKeyboardCoordinates, useSortable, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\nimport { ReactNode, useState } from \"react\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\n// import { AdminCourseSingularType } from \"@/app/data/admin/admin-get-courses\";\r\n// app/admin/courses/[courseId]/edit/_components/CourseStructure.tsx\r\nimport type { AdminCourseSingularType } from \"@/app/data/admin/admin-get-course\";\r\nimport { string } from \"zod\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { listenKeys } from \"better-auth/react\";\r\nimport { Collapsible } from \"@radix-ui/react-collapsible\";\r\nimport { ChevronDown, ChevronRight, FileText, GripVertical, Trash2 } from \"lucide-react\";\r\nimport { CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport Link from \"next/link\";\r\nimport { toast } from \"sonner\";\r\nimport { reorderLesson } from \"../actions\";\r\n\r\ninterface iAppProps {\r\n    data: AdminCourseSingularType\r\n}\r\n\r\ninterface ChapterItem {\r\n    id: string;\r\n    title: string;\r\n    order: number;\r\n    isOpen: boolean;\r\n    lessons: {\r\n        id: string;\r\n        title: string;\r\n        order: number;\r\n    }[];\r\n}\r\n\r\ninterface SortableItemProps {\r\n    id: string;\r\n    children: (listeners: DraggableSyntheticListeners) => ReactNode\r\n    className?: string,\r\n    data?: {\r\n        type: \"chapter\" | \"lesson\";\r\n        chapterId?: string;\r\n    }\r\n}\r\n\r\nexport function CourseStructure({ data }: iAppProps) {\r\n    const initialItems: ChapterItem[] = data.chapter.map((chapter) => ({\r\n        id: chapter.id,\r\n        title: chapter.title || `Chapter ${chapter.position}`,\r\n        order: chapter.position,\r\n        isOpen: false,\r\n        lessons: chapter.lessons.map((lesson) => ({\r\n            id: lesson.id,\r\n            title: lesson.title || `Lesson ${lesson.position}`,\r\n            order: lesson.position,\r\n        })),\r\n    }));\r\n\r\n    const [items, setItems] = useState(initialItems);\r\n\r\n    console.log(items)\r\n\r\n    function SortableItem({ children, id, className, data }: SortableItemProps) {\r\n        const {\r\n            attributes,\r\n            listeners,\r\n            setNodeRef,\r\n            transform,\r\n            transition,\r\n            isDragging,\r\n        } = useSortable({ id, data });\r\n\r\n        const style = {\r\n            transform: CSS.Transform.toString(transform),\r\n            transition,\r\n        };\r\n\r\n        return (\r\n            <div\r\n                ref={setNodeRef}\r\n                style={style}\r\n                {...attributes}\r\n                className={cn(\"touch-none\", className, isDragging && \"opacity-50\")}\r\n            >\r\n                {children(listeners)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function handleDragEnd(event: DragEndEvent) {\r\n        const { active, over } = event;\r\n\r\n        if (!over || active.id === over.id) {\r\n            return;\r\n        }\r\n        const activeId = active.id;\r\n        const overId = over.id;\r\n        const activeType = active.data.current?.type as \"chapter\" | \"lesson\";\r\n        const overType = over.data.current?.type as \"chapter\" | \"lesson\";\r\n        const courseId = data.id;\r\n\r\n\r\n        if (activeType === \"chapter\") {\r\n            if (overType === 'lesson') {\r\n                toast.error('Cannot move a chapter into another chapter');\r\n                return;\r\n            }\r\n\r\n            const oldIndex = items.findIndex((item) => item.id === String(activeId));\r\n            const newIndex = items.findIndex((item) => item.id === String(overId));\r\n\r\n            if (oldIndex === -1 || newIndex === -1) {\r\n                toast.error(\"Could not determine the chapter for reordering\");\r\n                return;\r\n            }\r\n\r\n            const recordedLocalChapters = arrayMove(items, oldIndex, newIndex);\r\n\r\n            const updatedChapterForState = recordedLocalChapters.map((chapter, index) => ({\r\n                ...chapter,\r\n                order: index + 1,\r\n            }));\r\n\r\n            const previousItems = [...items];\r\n\r\n            setItems(updatedChapterForState);\r\n        }\r\n        if (activeType === 'lesson' && overType === 'lesson') {\r\n            const chapterId = over.data.current?.chapterId;\r\n            const overChapterId = over.data.current?.chapterId;\r\n\r\n\r\n            if (!chapterId || chapterId !== overChapterId) {\r\n                toast.error(\"lesson move between different chapters or invalid chapter ID is not allowed\");\r\n                return;\r\n            }\r\n\r\n\r\n\r\n            const chapterIndex = items.findIndex(\r\n                (chapter) => chapter.id === chapterId\r\n            );\r\n\r\n            if (chapterIndex === -1) {\r\n                toast.error('could not find chapter')\r\n                return;\r\n            }\r\n\r\n\r\n            const chapterUpdate = items[chapterIndex];\r\n\r\n\r\n            const oldLessonIndex = chapterUpdate.lessons.findIndex(\r\n                (lesson) => lesson.id === activeId\r\n            );\r\n\r\n\r\n            const newLessonIndex = chapterUpdate.lessons.findIndex(\r\n                (lesson) => lesson.id === overId\r\n            );\r\n\r\n\r\n\r\n            if (oldLessonIndex === -1 || newLessonIndex === -1) {\r\n                toast.error(\"could not find lesson for recording\")\r\n                return;\r\n            };\r\n\r\n\r\n            const recordecLessons = arrayMove(\r\n                chapterUpdate.lessons,\r\n                oldLessonIndex,\r\n                newLessonIndex\r\n            );\r\n\r\n\r\n            const updateLessonForState = recordecLessons.map((lesson, index) => ({\r\n                ...lesson,\r\n                order: index + 1,\r\n            }));\r\n\r\n\r\n            const newItems = [...items];\r\n\r\n\r\n            newItems[chapterIndex] = {\r\n                ...chapterUpdate,\r\n                lessons: updateLessonForState,\r\n            };\r\n\r\n\r\n            const previousItems = [...items];\r\n\r\n\r\n            setItems(newItems);\r\n\r\n\r\n            if (courseId) {\r\n                const lessonToUpdate = updateLessonForState.map((lesson) => ({\r\n                    id: lesson.id,\r\n                    position: lesson.order,\r\n                }));\r\n\r\n\r\n                const reorderLessonPromise = () => reorderLesson(chapterId, lessonToUpdate, courseId);\r\n\r\n\r\n                toast.promise(reorderLessonPromise(), {\r\n                    loading: \"Reorderning lessons...\",\r\n                    success: (result) => {\r\n                        if (result.status === \"success\") return result.message;\r\n                        throw new Error(result.message)\r\n                    },\r\n                    error: () => {\r\n                        setItems(previousItems);\r\n                        return \"failed to reorder lesson\"\r\n                    }\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //     setItems((items) => {\r\n    //         const oldIndex = items.findIndex(item => item.id === active.id.toString());\r\n    //         const newIndex = items.findIndex(item => item.id === over.id.toString());\r\n\r\n    //         if (oldIndex === -1 || newIndex === -1) return items;\r\n\r\n    //         const newItems = arrayMove(items, oldIndex, newIndex);\r\n\r\n    //         // Update the order property based on new position\r\n    //         return newItems.map((item, index) => ({\r\n    //             ...item,\r\n    //             order: index + 1,\r\n    //             lessons: item.lessons.map((lesson, lessonIndex) => ({\r\n    //                 ...lesson,\r\n    //                 order: lessonIndex + 1\r\n    //             }))\r\n    //         }));\r\n    //     });\r\n    // }\r\n\r\n    function toggleChapter(chapterId: string) {\r\n        setItems((prevItems) =>\r\n            prevItems.map((chapter) =>\r\n                chapter.id === chapterId\r\n                    ? { ...chapter, isOpen: !chapter.isOpen }\r\n                    : chapter\r\n            )\r\n        );\r\n    }\r\n\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor),\r\n        useSensor(KeyboardSensor, {\r\n            coordinateGetter: sortableKeyboardCoordinates,\r\n        })\r\n    );\r\n    return (\r\n        <DndContext collisionDetection={rectIntersection} onDragEnd={handleDragEnd} sensors={sensors}>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between border-b border-border\">\r\n                    <CardTitle>Chapters</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-8\">\r\n                    <SortableContext\r\n                        items={items}\r\n                        strategy={verticalListSortingStrategy}>\r\n                        {items.map((item) => (\r\n                            <SortableItem\r\n                                id={item.id}\r\n                                data={{ type: \"chapter\" }}\r\n                                key={item.id}\r\n                            >\r\n                                {(listeners: DraggableSyntheticListeners) => (\r\n                                    <Card>\r\n                                        <Collapsible\r\n                                            open={item.isOpen}\r\n                                            onOpenChange={() => toggleChapter(item.id)}\r\n                                        >\r\n                                            <div className=\"flex items-center justify-start p-3 border-b border-border\">\r\n                                                <div className=\"flex items-center gap-2\">\r\n                                                    <Button\r\n                                                        variant=\"ghost\"\r\n                                                        size=\"icon\"\r\n                                                        {...listeners}>\r\n                                                        <GripVertical className=\"size-4\" />\r\n                                                    </Button>\r\n                                                    <CollapsibleTrigger asChild>\r\n                                                        <Button\r\n                                                            variant=\"ghost\"\r\n                                                            size=\"icon\"\r\n                                                            className=\"flex items-center\">\r\n                                                            {item.isOpen ? (\r\n                                                                <ChevronDown className=\"size-4\" />\r\n                                                            ) : (\r\n                                                                <ChevronRight className=\"size-4\" />\r\n                                                            )}\r\n                                                        </Button>\r\n                                                    </CollapsibleTrigger>\r\n\r\n\r\n                                                    <p className=\"corsor-pointer hover:text-primary pl-2\">\r\n                                                        {item.title}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <Button\r\n                                                    size=\"icon\"\r\n                                                    variant=\"ghost\"\r\n                                                    className=\"ml-auto text-destructive hover:text-destructive hover:bg-destructive/10\"\r\n                                                >\r\n                                                    <Trash2 className=\"size-4\" />\r\n                                                </Button>\r\n                                            </div>\r\n\r\n                                            <CollapsibleContent>\r\n                                                <div>\r\n                                                    <SortableContext items={item.lessons.map((lesson) => lesson.id)}\r\n                                                        strategy={verticalListSortingStrategy}\r\n                                                    >\r\n\r\n                                                        {item.lessons.map((lesson) => (\r\n                                                            <SortableItem\r\n                                                                key={lesson.id}\r\n                                                                id={lesson.id}\r\n                                                                data={{ type: \"lesson\", chapterId: item.id }}\r\n                                                            >\r\n\r\n                                                                {(lessonListeners) => (\r\n                                                                    <div className=\"flex items-center justify-between p-2 hover:bg-accent rounded-sm\">\r\n                                                                        <div className=\"flex items-center gap-2\">\r\n                                                                            <Button variant=\"ghost\" size=\"icon\"\r\n                                                                                {...lessonListeners}\r\n                                                                            >\r\n                                                                                <GripVertical className=\"size-4\" />\r\n                                                                            </Button>\r\n\r\n                                                                            <FileText className=\"size-4\" />\r\n                                                                            <Link href={`/admin/courses/${data.id}/${item.id}/${lesson.id}`}>\r\n                                                                                {lesson.title}\r\n                                                                            </Link>\r\n                                                                        </div>\r\n                                                                        <Button variant=\"outline\" size=\"icon\">\r\n                                                                            <Trash2 className=\"size-4\" />\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                            </SortableItem>\r\n                                                        ))}\r\n\r\n                                                    </SortableContext>\r\n                                                    <div className=\"p-2\">\r\n                                                        <Button variant=\"outline\" className=\"w-full\">Create new lesson</Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CollapsibleContent>\r\n                                        </Collapsible>\r\n                                    </Card>\r\n                                )}\r\n                            </SortableItem>\r\n                        ))}\r\n                    </SortableContext>\r\n                </CardContent>\r\n            </Card>\r\n        </DndContext>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}