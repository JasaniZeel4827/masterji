{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/themeToggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/themeToggle.tsx <module evaluation>\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,+DACA","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/themeToggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/themeToggle.tsx\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2CACA","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/lib/auth-client.ts"],"sourcesContent":["import { createAuthClient } from \"better-auth/react\"\r\n\r\nexport const authClient = createAuthClient({\r\n  /** The base URL of the server (optional if you're using the same domain) */\r\n  baseURL: \"http://localhost:3000\"\r\n})"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,0EAA0E,GAC1E,SAAS;AACX","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/page.tsx"],"sourcesContent":["// import Image from \"next/image\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { ThemeToggle } from \"@/components/ui/themeToggle\";\n// import { auth } from \"@/lib/auth\";\nimport { authClient } from \"@/lib/auth-client\";\nimport { useRouter } from \"next/navigation\";\n\n// import { headers } from \"next/headers\";\n\n\n\nexport default async function Home() {\n\n  const router = useRouter();\n  const { data: session } = await authClient.useSession();\n\n\n  async function signOut() {\n    await authClient.signOut({\n      fetchOptions: {\n        onSuccess: () => {\n          router.push(\"/\");\n        },\n      },\n    });\n  }\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-4\">\n      <h1 className=\"text-3xl font-bold underline animate-pulse animate-spotlight bg-gradient-to-r bg-emerald-400 to-sky-700 from-emerald-500 bg-clip-text text-transparent\">\n        hello world\n      </h1>\n      <ThemeToggle />\n\n\n      {session ? (\n        <div>\n          <p>{session.user.name}</p>\n          <Button\n            onClick={signOut}>\n            Logout\n          </Button>\n        </div>\n      ) : (\n        <Button>login</Button>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAElC;AACA;AACA,qCAAqC;AACrC;AACA;AAAA;;;;;;AAMe,eAAe;IAE5B,MAAM,SAAS,CAAA,GAAA,qLAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,qHAAA,CAAA,aAAU,CAAC,UAAU;IAGrD,eAAe;QACb,MAAM,qHAAA,CAAA,aAAU,CAAC,OAAO,CAAC;YACvB,cAAc;gBACZ,WAAW;oBACT,OAAO,IAAI,CAAC;gBACd;YACF;QACF;IACF;IACA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAyJ;;;;;;0BAGvK,8OAAC,gIAAA,CAAA,cAAW;;;;;YAGX,wBACC,8OAAC;;kCACC,8OAAC;kCAAG,QAAQ,IAAI,CAAC,IAAI;;;;;;kCACrB,8OAAC,2HAAA,CAAA,SAAM;wBACL,SAAS;kCAAS;;;;;;;;;;;qCAKtB,8OAAC,2HAAA,CAAA,SAAM;0BAAC;;;;;;;;;;;;AAIhB","debugId":null}}]
}