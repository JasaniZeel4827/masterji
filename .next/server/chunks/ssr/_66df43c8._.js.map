{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/app/admin/courses/%5BcourseId%5D/edit/_components/EditCourseForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\n\r\nexport function EditCourseForm() {\r\n    const [isPending, startTransition] = useTransition()\r\n    const router = useRouter();\r\n    const form = useForm<CourseSchemaType>({\r\n        resolver: zodResolver(courseSchema),\r\n        defaultValues: {\r\n            title: \"\",\r\n            description: \"\",\r\n            fileKey: \"\",\r\n            price: 1,\r\n            duration: 1,\r\n            level: \"BEGINNER\",\r\n            category: \"Computer Science Fundamentals\",\r\n            smallDescription: \"\",\r\n            slug: \"\",\r\n            status: \"DRAFT\"\r\n        },\r\n    });\r\n\r\n\r\n\r\n    function onSubmit(values: CourseSchemaType) {\r\n        // console.log(values);\r\n        startTransition(async () => {\r\n            const { data: result, error } = await tryCatch(CreateCourse(values));\r\n\r\n            if (error) {\r\n                toast.error(\"an unexpected error occurred\")\r\n                return;\r\n            }\r\n\r\n            if (result.status === 'success') {\r\n                toast.success(result.message)\r\n                form.reset();\r\n                router.push(\"/admin/courses\")\r\n            } else if (result.status === \"error\") {\r\n                toast.error(result.message);\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <form\r\n            className=\"space-y-6\"\r\n            onSubmit={form.handleSubmit(onSubmit)}\r\n        >\r\n            <FormField\r\n                control={form.control}\r\n                name=\"title\"\r\n                render={({ field }) => (\r\n                    <FormItem>\r\n                        <FormLabel>Title</FormLabel>\r\n                        <FormControl>\r\n                            <Input placeholder=\"Title\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                    </FormItem>\r\n                )}\r\n            />\r\n            <div className=\"flex gap-4 items-end\">\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"slug\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Slug</FormLabel>\r\n                            <FormControl>\r\n                                <Input placeholder=\"slug\" {...field} />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"w-fit\"\r\n                    onClick={() => {\r\n                        const titleValue = form.getValues(\"title\");\r\n                        const slug = slugify(titleValue);\r\n                        form.setValue(\"slug\", slug, { shouldValidate: true });\r\n                    }}\r\n                >\r\n                    Generate Slug <SparkleIcon className=\"ml-1\" size={16} />\r\n                </Button>\r\n            </div>\r\n            <FormField\r\n                control={form.control}\r\n                name=\"smallDescription\"\r\n                render={({ field }) => (\r\n                    <FormItem className=\"w-full\">\r\n                        <FormLabel>Small Description</FormLabel>\r\n                        <FormControl>\r\n                            <Textarea\r\n                                placeholder=\"Small description\"\r\n                                className=\"min-h-[120px]\"\r\n                                {...field}\r\n                            />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                    </FormItem>\r\n                )}\r\n            />\r\n\r\n            <FormField\r\n                control={form.control}\r\n                name=\"description\"\r\n                render={({ field }) => (\r\n                    <FormItem className=\"w-full\">\r\n                        <FormLabel>Description</FormLabel>\r\n                        <FormControl>\r\n                            <RichTextEditor field={field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                    </FormItem>\r\n                )}\r\n            />\r\n            <FormField\r\n                control={form.control}\r\n                name=\"fileKey\"\r\n                render={({ field }) => (\r\n                    <FormItem className=\"w-full\">\r\n                        <FormLabel>Thumbnail Image</FormLabel>\r\n                        <FormControl>\r\n                            <Uploader onChange={field.onChange} value={field.value} />\r\n                            {/* <Input placeholder=\"thumbnail url\" {...field} /> */}\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                    </FormItem>\r\n                )}\r\n            />\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"category\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Category</FormLabel>\r\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                <FormControl>\r\n                                    <SelectTrigger className=\"w-full\">\r\n                                        <SelectValue placeholder=\"Select Category\" />\r\n                                    </SelectTrigger>\r\n                                </FormControl>\r\n                                <SelectContent>\r\n                                    {courseCategories.map((category) => (\r\n                                        <SelectItem key={category} value={category}>\r\n                                            {category}\r\n                                        </SelectItem>\r\n                                    ))}\r\n                                </SelectContent>\r\n                            </Select>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"level\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Level</FormLabel>\r\n                            <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                                <FormControl>\r\n                                    <SelectTrigger className=\"w-full\">\r\n                                        <SelectValue placeholder=\"Select Level\" />\r\n                                    </SelectTrigger>\r\n                                </FormControl>\r\n                                <SelectContent>\r\n                                    {courseLevels.map((level) => (\r\n                                        <SelectItem key={level} value={level}>\r\n                                            {level}\r\n                                        </SelectItem>\r\n                                    ))}\r\n                                </SelectContent>\r\n                            </Select>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"duration\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Duration (hours)</FormLabel>\r\n                            <FormControl>\r\n                                <Input\r\n                                    placeholder=\"Course Duration\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"500\"\r\n                                    {...field}\r\n                                />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n                <FormField\r\n                    control={form.control}\r\n                    name=\"price\"\r\n                    render={({ field }) => (\r\n                        <FormItem className=\"w-full\">\r\n                            <FormLabel>Course Price ($)</FormLabel>\r\n                            <FormControl>\r\n                                <Input\r\n                                    placeholder=\"Course Price\"\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    {...field}\r\n                                />\r\n                            </FormControl>\r\n                            <FormMessage />\r\n                        </FormItem>\r\n                    )}\r\n                />\r\n            </div>\r\n            <Button type=\"submit\" disabled={isPending}>\r\n                {isPending ? (\r\n                    <>\r\n                        Creating...\r\n                        <Loader2 className=\"animate-spin\" />\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        Create Course <PlusIcon className=\"ml-1\" size={16} />\r\n                    </>\r\n                )}\r\n            </Button>\r\n        </form>\r\n    )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///D:/masterji/node_modules/%40radix-ui/react-tabs/src/tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ComponentRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue ?? '',\n      caller: TABS_NAME,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ComponentRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"],"names":["Root"],"mappings":"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","debugId":null}}]
}